Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print SEMICOLON
Rule 5     instruccion -> declarevar SEMICOLON
Rule 6     instruccion -> declareConst SEMICOLON
Rule 7     instruccion -> assignVar SEMICOLON
Rule 8     instruccion -> declareArray SEMICOLON
Rule 9     instruccion -> declareArrayConst SEMICOLON
Rule 10    instruccion -> assingArray SEMICOLON
Rule 11    instruccion -> arrayFuncs SEMICOLON
Rule 12    instruccion -> if_else
Rule 13    instruccion -> case_inst
Rule 14    instruccion -> ternario SEMICOLON
Rule 15    instruccion -> while_
Rule 16    instruccion -> for_
Rule 17    instruccion -> transfer SEMICOLON
Rule 18    instruccion -> createInterface
Rule 19    instruccion -> declareInterface SEMICOLON
Rule 20    instruccion -> modifyInterface SEMICOLON
Rule 21    instruccion -> declareFunction
Rule 22    instruccion -> callFunction SEMICOLON
Rule 23    print -> CONSOLE DOT LOG PARA expression_list PARC
Rule 24    declarevar -> RVAR ID DOUBLEDOT type EQUAL expression
Rule 25    declarevar -> RVAR ID EQUAL expression
Rule 26    declarevar -> RVAR ID DOUBLEDOT type
Rule 27    declareConst -> RCONST ID DOUBLEDOT type EQUAL expression
Rule 28    declareConst -> RCONST ID EQUAL expression
Rule 29    declareConst -> RCONST ID DOUBLEDOT type
Rule 30    assignVar -> ID EQUAL expression
Rule 31    assignVar -> ID PLUS EQUAL expression
Rule 32    assignVar -> ID LESS EQUAL expression
Rule 33    declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
Rule 34    declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
Rule 35    declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
Rule 36    declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
Rule 37    declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
Rule 38    declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
Rule 39    assingArray -> ID BRACKETO expression BRACKETC EQUAL expression
Rule 40    arrayFuncs -> ID DOT RPUSH PARA expression PARC
Rule 41    if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
Rule 42    else -> RELSE LLAVEA instrucciones LLAVEC
Rule 43    else -> RELSE if_else
Rule 44    else -> <empty>
Rule 45    case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
Rule 46    cases -> cases case
Rule 47    cases -> case
Rule 48    case -> RCASE expression DOUBLEDOT instrucciones
Rule 49    ternario -> expression QUESTIONM expression DOUBLEDOT expression
Rule 50    while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
Rule 51    for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
Rule 52    for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
Rule 53    transfer -> RBREAK
Rule 54    transfer -> RCONTINUE
Rule 55    transfer -> RRETURN
Rule 56    transfer -> RRETURN expression
Rule 57    createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC
Rule 58    attributesList -> attributesList ID DOUBLEDOT type SEMICOLON
Rule 59    attributesList -> ID DOUBLEDOT type SEMICOLON
Rule 60    declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
Rule 61    declareInterface -> RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
Rule 62    interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression
Rule 63    interfaceContent -> ID DOUBLEDOT expression
Rule 64    modifyInterface -> ID DOT ID EQUAL expression
Rule 65    declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
Rule 66    funcparams -> funcparams COMMA param
Rule 67    funcparams -> param
Rule 68    funcparams -> <empty>
Rule 69    param -> ID DOUBLEDOT type
Rule 70    returntype -> DOUBLEDOT type
Rule 71    returntype -> <empty>
Rule 72    callFunction -> ID PARA expression_list PARC
Rule 73    callFunction -> ID PARA PARC
Rule 74    expression -> primitivo
Rule 75    expression -> aritmetica
Rule 76    expression -> relacional
Rule 77    expression -> logica
Rule 78    expression -> expression_group
Rule 79    expression -> id_
Rule 80    expression -> arraysExpression
Rule 81    expression -> callInterface
Rule 82    expression -> boolean
Rule 83    expression -> callFunction
Rule 84    expression -> funcEmbebida
Rule 85    funcEmbebida -> RPARSEINT PARA expression PARC
Rule 86    funcEmbebida -> RPARSEFLOAT PARA expression PARC
Rule 87    funcEmbebida -> ID DOT RTOSTRING PARA PARC
Rule 88    funcEmbebida -> FALSE DOT RTOSTRING PARA PARC
Rule 89    funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC
Rule 90    funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC
Rule 91    funcEmbebida -> RTYPEOF expression
Rule 92    expression_group -> PARA expression PARC
Rule 93    callInterface -> ID DOT ID
Rule 94    callInterface -> ROBJECT DOT RKEYS PARA ID PARC
Rule 95    callInterface -> ROBJECT DOT RVALUES PARA ID PARC
Rule 96    expression_list -> expression_list COMMA expression
Rule 97    expression_list -> expression
Rule 98    id_ -> ID
Rule 99    id_ -> ID BRACKETO expression BRACKETC
Rule 100   aritmetica -> expression PLUS expression
Rule 101   aritmetica -> expression BY expression
Rule 102   aritmetica -> expression DIVIDED expression
Rule 103   aritmetica -> expression LESS expression
Rule 104   aritmetica -> expression MODUL expression
Rule 105   aritmetica -> LESS expression
Rule 106   relacional -> expression DEQUAL expression
Rule 107   relacional -> expression DIFERENT expression
Rule 108   relacional -> expression MINOR expression
Rule 109   relacional -> expression MINOREQUAL expression
Rule 110   relacional -> expression GREATER expression
Rule 111   relacional -> expression GREATEREQUAL expression
Rule 112   logica -> expression AND expression
Rule 113   logica -> expression OR expression
Rule 114   logica -> NOT expression
Rule 115   primitivo -> NUMBER
Rule 116   primitivo -> FLOAT
Rule 117   primitivo -> STRING
Rule 118   arraysExpression -> ID DOT RPOP PARA PARC
Rule 119   arraysExpression -> ID DOT RINDEXOF PARA expression PARC
Rule 120   arraysExpression -> ID DOT RJOIN PARA PARC
Rule 121   arraysExpression -> ID DOT RLENGTH
Rule 122   boolean -> TRUE
Rule 123   boolean -> FALSE
Rule 124   type -> RNUMBER
Rule 125   type -> RFLOAT
Rule 126   type -> RSTRING
Rule 127   type -> RBOOLEAN
Rule 128   type -> type BRACKETO BRACKETC

Terminals, with rules where they appear

AND                  : 112
BRACKETC             : 33 33 34 35 35 36 36 37 38 38 39 99 128
BRACKETO             : 33 33 34 35 35 36 36 37 38 38 39 99 128
BY                   : 101
COMMA                : 62 66 96
CONSOLE              : 23
DEQUAL               : 106
DIFERENT             : 107
DIVIDED              : 102
DOT                  : 23 40 64 87 88 89 90 93 94 95 118 119 120 121
DOUBLEDOT            : 24 26 27 29 33 34 35 36 37 38 45 48 49 58 59 60 61 62 63 69 70
EQUAL                : 24 25 27 28 30 31 32 33 34 35 36 37 38 39 60 61 64
FALSE                : 88 123
FLOAT                : 116
GREATER              : 110
GREATEREQUAL         : 111
ID                   : 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 57 58 59 60 60 61 61 62 63 64 64 65 69 72 73 87 89 90 93 93 94 95 98 99 118 119 120 121
LESS                 : 32 52 52 103 105
LLAVEA               : 41 42 45 50 51 52 57 60 61 65
LLAVEC               : 41 42 45 50 51 52 57 60 61 65
LOG                  : 23
MINOR                : 108
MINOREQUAL           : 109
MODUL                : 104
NOT                  : 114
NUMBER               : 115
OR                   : 113
PARA                 : 23 40 41 45 50 51 52 65 72 73 85 86 87 88 89 90 92 94 95 118 119 120
PARC                 : 23 40 41 45 50 51 52 65 72 73 85 86 87 88 89 90 92 94 95 118 119 120
PLUS                 : 31 51 51 100
QUESTIONM            : 49
RBOOLEAN             : 127
RBREAK               : 53
RCASE                : 48
RCONST               : 27 28 29 36 37 38 61
RCONTINUE            : 54
RDEFAULT             : 45
RELSE                : 42 43
RFLOAT               : 125
RFOR                 : 51 52
RFUNCTION            : 65
RIF                  : 41
RINDEXOF             : 119
RINTERFACE           : 57
RJOIN                : 120
RKEYS                : 94
RLENGTH              : 121
RNUMBER              : 124
ROBJECT              : 94 95
RPARSEFLOAT          : 86
RPARSEINT            : 85
RPOP                 : 118
RPUSH                : 40
RRETURN              : 55 56
RSTRING              : 126
RSWITCH              : 45
RTOLOWERCASE         : 89
RTOSTRING            : 87 88
RTOUPPERCASE         : 90
RTYPEOF              : 91
RVALUES              : 95
RVAR                 : 24 25 26 33 34 35 60
RWHILE               : 50
SEMICOLON            : 4 5 6 7 8 9 10 11 14 17 19 20 22 51 51 52 52 58 59
STRING               : 117
TRUE                 : 122
error                : 

Nonterminals, with rules where they appear

aritmetica           : 75
arrayFuncs           : 11
arraysExpression     : 80
assignVar            : 7
assingArray          : 10
attributesList       : 57 58
boolean              : 82
callFunction         : 22 83
callInterface        : 81
case                 : 46 47
case_inst            : 13
cases                : 45 46
createInterface      : 18
declareArray         : 8
declareArrayConst    : 9
declareConst         : 6
declareFunction      : 21
declareInterface     : 19
declarevar           : 5 51 52
else                 : 41
expression           : 24 25 27 28 30 31 32 34 37 39 39 40 41 45 48 49 49 49 50 56 62 63 64 85 86 91 92 96 97 99 100 100 101 101 102 102 103 103 104 104 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 119
expression_group     : 78
expression_list      : 23 33 36 72 96
for_                 : 16
funcEmbebida         : 84
funcparams           : 65 66
id_                  : 51 52 79
if_else              : 12 43
instruccion          : 2 3
instrucciones        : 1 2 41 42 45 48 50 51 52 65
interfaceContent     : 60 61 62
logica               : 77
modifyInterface      : 20
param                : 66 67
primitivo            : 74
print                : 4
relacional           : 51 52 76
returntype           : 65
start                : 0
ternario             : 14
transfer             : 17
type                 : 24 26 27 29 33 34 35 36 37 38 58 59 69 70 128
while_               : 15

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    $end            reduce using rule 1 (start -> instrucciones .)
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    RVAR            reduce using rule 3 (instrucciones -> instruccion .)
    RCONST          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    RSWITCH         reduce using rule 3 (instrucciones -> instruccion .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion .)
    RBREAK          reduce using rule 3 (instrucciones -> instruccion .)
    RCONTINUE       reduce using rule 3 (instrucciones -> instruccion .)
    RRETURN         reduce using rule 3 (instrucciones -> instruccion .)
    RINTERFACE      reduce using rule 3 (instrucciones -> instruccion .)
    RFUNCTION       reduce using rule 3 (instrucciones -> instruccion .)
    NUMBER          reduce using rule 3 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 3 (instrucciones -> instruccion .)
    STRING          reduce using rule 3 (instrucciones -> instruccion .)
    LESS            reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    PARA            reduce using rule 3 (instrucciones -> instruccion .)
    ROBJECT         reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    RPARSEINT       reduce using rule 3 (instrucciones -> instruccion .)
    RPARSEFLOAT     reduce using rule 3 (instrucciones -> instruccion .)
    RTYPEOF         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEC          reduce using rule 3 (instrucciones -> instruccion .)
    RDEFAULT        reduce using rule 3 (instrucciones -> instruccion .)
    RCASE           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print . SEMICOLON

    SEMICOLON       shift and go to state 60


state 5

    (5) instruccion -> declarevar . SEMICOLON

    SEMICOLON       shift and go to state 61


state 6

    (6) instruccion -> declareConst . SEMICOLON

    SEMICOLON       shift and go to state 62


state 7

    (7) instruccion -> assignVar . SEMICOLON

    SEMICOLON       shift and go to state 63


state 8

    (8) instruccion -> declareArray . SEMICOLON

    SEMICOLON       shift and go to state 64


state 9

    (9) instruccion -> declareArrayConst . SEMICOLON

    SEMICOLON       shift and go to state 65


state 10

    (10) instruccion -> assingArray . SEMICOLON

    SEMICOLON       shift and go to state 66


state 11

    (11) instruccion -> arrayFuncs . SEMICOLON

    SEMICOLON       shift and go to state 67


state 12

    (12) instruccion -> if_else .

    CONSOLE         reduce using rule 12 (instruccion -> if_else .)
    RVAR            reduce using rule 12 (instruccion -> if_else .)
    RCONST          reduce using rule 12 (instruccion -> if_else .)
    ID              reduce using rule 12 (instruccion -> if_else .)
    RIF             reduce using rule 12 (instruccion -> if_else .)
    RSWITCH         reduce using rule 12 (instruccion -> if_else .)
    RWHILE          reduce using rule 12 (instruccion -> if_else .)
    RFOR            reduce using rule 12 (instruccion -> if_else .)
    RBREAK          reduce using rule 12 (instruccion -> if_else .)
    RCONTINUE       reduce using rule 12 (instruccion -> if_else .)
    RRETURN         reduce using rule 12 (instruccion -> if_else .)
    RINTERFACE      reduce using rule 12 (instruccion -> if_else .)
    RFUNCTION       reduce using rule 12 (instruccion -> if_else .)
    NUMBER          reduce using rule 12 (instruccion -> if_else .)
    FLOAT           reduce using rule 12 (instruccion -> if_else .)
    STRING          reduce using rule 12 (instruccion -> if_else .)
    LESS            reduce using rule 12 (instruccion -> if_else .)
    NOT             reduce using rule 12 (instruccion -> if_else .)
    PARA            reduce using rule 12 (instruccion -> if_else .)
    ROBJECT         reduce using rule 12 (instruccion -> if_else .)
    TRUE            reduce using rule 12 (instruccion -> if_else .)
    FALSE           reduce using rule 12 (instruccion -> if_else .)
    RPARSEINT       reduce using rule 12 (instruccion -> if_else .)
    RPARSEFLOAT     reduce using rule 12 (instruccion -> if_else .)
    RTYPEOF         reduce using rule 12 (instruccion -> if_else .)
    $end            reduce using rule 12 (instruccion -> if_else .)
    LLAVEC          reduce using rule 12 (instruccion -> if_else .)
    RDEFAULT        reduce using rule 12 (instruccion -> if_else .)
    RCASE           reduce using rule 12 (instruccion -> if_else .)


state 13

    (13) instruccion -> case_inst .

    CONSOLE         reduce using rule 13 (instruccion -> case_inst .)
    RVAR            reduce using rule 13 (instruccion -> case_inst .)
    RCONST          reduce using rule 13 (instruccion -> case_inst .)
    ID              reduce using rule 13 (instruccion -> case_inst .)
    RIF             reduce using rule 13 (instruccion -> case_inst .)
    RSWITCH         reduce using rule 13 (instruccion -> case_inst .)
    RWHILE          reduce using rule 13 (instruccion -> case_inst .)
    RFOR            reduce using rule 13 (instruccion -> case_inst .)
    RBREAK          reduce using rule 13 (instruccion -> case_inst .)
    RCONTINUE       reduce using rule 13 (instruccion -> case_inst .)
    RRETURN         reduce using rule 13 (instruccion -> case_inst .)
    RINTERFACE      reduce using rule 13 (instruccion -> case_inst .)
    RFUNCTION       reduce using rule 13 (instruccion -> case_inst .)
    NUMBER          reduce using rule 13 (instruccion -> case_inst .)
    FLOAT           reduce using rule 13 (instruccion -> case_inst .)
    STRING          reduce using rule 13 (instruccion -> case_inst .)
    LESS            reduce using rule 13 (instruccion -> case_inst .)
    NOT             reduce using rule 13 (instruccion -> case_inst .)
    PARA            reduce using rule 13 (instruccion -> case_inst .)
    ROBJECT         reduce using rule 13 (instruccion -> case_inst .)
    TRUE            reduce using rule 13 (instruccion -> case_inst .)
    FALSE           reduce using rule 13 (instruccion -> case_inst .)
    RPARSEINT       reduce using rule 13 (instruccion -> case_inst .)
    RPARSEFLOAT     reduce using rule 13 (instruccion -> case_inst .)
    RTYPEOF         reduce using rule 13 (instruccion -> case_inst .)
    $end            reduce using rule 13 (instruccion -> case_inst .)
    LLAVEC          reduce using rule 13 (instruccion -> case_inst .)
    RDEFAULT        reduce using rule 13 (instruccion -> case_inst .)
    RCASE           reduce using rule 13 (instruccion -> case_inst .)


state 14

    (14) instruccion -> ternario . SEMICOLON

    SEMICOLON       shift and go to state 68


state 15

    (15) instruccion -> while_ .

    CONSOLE         reduce using rule 15 (instruccion -> while_ .)
    RVAR            reduce using rule 15 (instruccion -> while_ .)
    RCONST          reduce using rule 15 (instruccion -> while_ .)
    ID              reduce using rule 15 (instruccion -> while_ .)
    RIF             reduce using rule 15 (instruccion -> while_ .)
    RSWITCH         reduce using rule 15 (instruccion -> while_ .)
    RWHILE          reduce using rule 15 (instruccion -> while_ .)
    RFOR            reduce using rule 15 (instruccion -> while_ .)
    RBREAK          reduce using rule 15 (instruccion -> while_ .)
    RCONTINUE       reduce using rule 15 (instruccion -> while_ .)
    RRETURN         reduce using rule 15 (instruccion -> while_ .)
    RINTERFACE      reduce using rule 15 (instruccion -> while_ .)
    RFUNCTION       reduce using rule 15 (instruccion -> while_ .)
    NUMBER          reduce using rule 15 (instruccion -> while_ .)
    FLOAT           reduce using rule 15 (instruccion -> while_ .)
    STRING          reduce using rule 15 (instruccion -> while_ .)
    LESS            reduce using rule 15 (instruccion -> while_ .)
    NOT             reduce using rule 15 (instruccion -> while_ .)
    PARA            reduce using rule 15 (instruccion -> while_ .)
    ROBJECT         reduce using rule 15 (instruccion -> while_ .)
    TRUE            reduce using rule 15 (instruccion -> while_ .)
    FALSE           reduce using rule 15 (instruccion -> while_ .)
    RPARSEINT       reduce using rule 15 (instruccion -> while_ .)
    RPARSEFLOAT     reduce using rule 15 (instruccion -> while_ .)
    RTYPEOF         reduce using rule 15 (instruccion -> while_ .)
    $end            reduce using rule 15 (instruccion -> while_ .)
    LLAVEC          reduce using rule 15 (instruccion -> while_ .)
    RDEFAULT        reduce using rule 15 (instruccion -> while_ .)
    RCASE           reduce using rule 15 (instruccion -> while_ .)


state 16

    (16) instruccion -> for_ .

    CONSOLE         reduce using rule 16 (instruccion -> for_ .)
    RVAR            reduce using rule 16 (instruccion -> for_ .)
    RCONST          reduce using rule 16 (instruccion -> for_ .)
    ID              reduce using rule 16 (instruccion -> for_ .)
    RIF             reduce using rule 16 (instruccion -> for_ .)
    RSWITCH         reduce using rule 16 (instruccion -> for_ .)
    RWHILE          reduce using rule 16 (instruccion -> for_ .)
    RFOR            reduce using rule 16 (instruccion -> for_ .)
    RBREAK          reduce using rule 16 (instruccion -> for_ .)
    RCONTINUE       reduce using rule 16 (instruccion -> for_ .)
    RRETURN         reduce using rule 16 (instruccion -> for_ .)
    RINTERFACE      reduce using rule 16 (instruccion -> for_ .)
    RFUNCTION       reduce using rule 16 (instruccion -> for_ .)
    NUMBER          reduce using rule 16 (instruccion -> for_ .)
    FLOAT           reduce using rule 16 (instruccion -> for_ .)
    STRING          reduce using rule 16 (instruccion -> for_ .)
    LESS            reduce using rule 16 (instruccion -> for_ .)
    NOT             reduce using rule 16 (instruccion -> for_ .)
    PARA            reduce using rule 16 (instruccion -> for_ .)
    ROBJECT         reduce using rule 16 (instruccion -> for_ .)
    TRUE            reduce using rule 16 (instruccion -> for_ .)
    FALSE           reduce using rule 16 (instruccion -> for_ .)
    RPARSEINT       reduce using rule 16 (instruccion -> for_ .)
    RPARSEFLOAT     reduce using rule 16 (instruccion -> for_ .)
    RTYPEOF         reduce using rule 16 (instruccion -> for_ .)
    $end            reduce using rule 16 (instruccion -> for_ .)
    LLAVEC          reduce using rule 16 (instruccion -> for_ .)
    RDEFAULT        reduce using rule 16 (instruccion -> for_ .)
    RCASE           reduce using rule 16 (instruccion -> for_ .)


state 17

    (17) instruccion -> transfer . SEMICOLON

    SEMICOLON       shift and go to state 69


state 18

    (18) instruccion -> createInterface .

    CONSOLE         reduce using rule 18 (instruccion -> createInterface .)
    RVAR            reduce using rule 18 (instruccion -> createInterface .)
    RCONST          reduce using rule 18 (instruccion -> createInterface .)
    ID              reduce using rule 18 (instruccion -> createInterface .)
    RIF             reduce using rule 18 (instruccion -> createInterface .)
    RSWITCH         reduce using rule 18 (instruccion -> createInterface .)
    RWHILE          reduce using rule 18 (instruccion -> createInterface .)
    RFOR            reduce using rule 18 (instruccion -> createInterface .)
    RBREAK          reduce using rule 18 (instruccion -> createInterface .)
    RCONTINUE       reduce using rule 18 (instruccion -> createInterface .)
    RRETURN         reduce using rule 18 (instruccion -> createInterface .)
    RINTERFACE      reduce using rule 18 (instruccion -> createInterface .)
    RFUNCTION       reduce using rule 18 (instruccion -> createInterface .)
    NUMBER          reduce using rule 18 (instruccion -> createInterface .)
    FLOAT           reduce using rule 18 (instruccion -> createInterface .)
    STRING          reduce using rule 18 (instruccion -> createInterface .)
    LESS            reduce using rule 18 (instruccion -> createInterface .)
    NOT             reduce using rule 18 (instruccion -> createInterface .)
    PARA            reduce using rule 18 (instruccion -> createInterface .)
    ROBJECT         reduce using rule 18 (instruccion -> createInterface .)
    TRUE            reduce using rule 18 (instruccion -> createInterface .)
    FALSE           reduce using rule 18 (instruccion -> createInterface .)
    RPARSEINT       reduce using rule 18 (instruccion -> createInterface .)
    RPARSEFLOAT     reduce using rule 18 (instruccion -> createInterface .)
    RTYPEOF         reduce using rule 18 (instruccion -> createInterface .)
    $end            reduce using rule 18 (instruccion -> createInterface .)
    LLAVEC          reduce using rule 18 (instruccion -> createInterface .)
    RDEFAULT        reduce using rule 18 (instruccion -> createInterface .)
    RCASE           reduce using rule 18 (instruccion -> createInterface .)


state 19

    (19) instruccion -> declareInterface . SEMICOLON

    SEMICOLON       shift and go to state 70


state 20

    (20) instruccion -> modifyInterface . SEMICOLON

    SEMICOLON       shift and go to state 71


state 21

    (21) instruccion -> declareFunction .

    CONSOLE         reduce using rule 21 (instruccion -> declareFunction .)
    RVAR            reduce using rule 21 (instruccion -> declareFunction .)
    RCONST          reduce using rule 21 (instruccion -> declareFunction .)
    ID              reduce using rule 21 (instruccion -> declareFunction .)
    RIF             reduce using rule 21 (instruccion -> declareFunction .)
    RSWITCH         reduce using rule 21 (instruccion -> declareFunction .)
    RWHILE          reduce using rule 21 (instruccion -> declareFunction .)
    RFOR            reduce using rule 21 (instruccion -> declareFunction .)
    RBREAK          reduce using rule 21 (instruccion -> declareFunction .)
    RCONTINUE       reduce using rule 21 (instruccion -> declareFunction .)
    RRETURN         reduce using rule 21 (instruccion -> declareFunction .)
    RINTERFACE      reduce using rule 21 (instruccion -> declareFunction .)
    RFUNCTION       reduce using rule 21 (instruccion -> declareFunction .)
    NUMBER          reduce using rule 21 (instruccion -> declareFunction .)
    FLOAT           reduce using rule 21 (instruccion -> declareFunction .)
    STRING          reduce using rule 21 (instruccion -> declareFunction .)
    LESS            reduce using rule 21 (instruccion -> declareFunction .)
    NOT             reduce using rule 21 (instruccion -> declareFunction .)
    PARA            reduce using rule 21 (instruccion -> declareFunction .)
    ROBJECT         reduce using rule 21 (instruccion -> declareFunction .)
    TRUE            reduce using rule 21 (instruccion -> declareFunction .)
    FALSE           reduce using rule 21 (instruccion -> declareFunction .)
    RPARSEINT       reduce using rule 21 (instruccion -> declareFunction .)
    RPARSEFLOAT     reduce using rule 21 (instruccion -> declareFunction .)
    RTYPEOF         reduce using rule 21 (instruccion -> declareFunction .)
    $end            reduce using rule 21 (instruccion -> declareFunction .)
    LLAVEC          reduce using rule 21 (instruccion -> declareFunction .)
    RDEFAULT        reduce using rule 21 (instruccion -> declareFunction .)
    RCASE           reduce using rule 21 (instruccion -> declareFunction .)


state 22

    (22) instruccion -> callFunction . SEMICOLON
    (83) expression -> callFunction .

    SEMICOLON       shift and go to state 72
    QUESTIONM       reduce using rule 83 (expression -> callFunction .)
    PLUS            reduce using rule 83 (expression -> callFunction .)
    BY              reduce using rule 83 (expression -> callFunction .)
    DIVIDED         reduce using rule 83 (expression -> callFunction .)
    LESS            reduce using rule 83 (expression -> callFunction .)
    MODUL           reduce using rule 83 (expression -> callFunction .)
    DEQUAL          reduce using rule 83 (expression -> callFunction .)
    DIFERENT        reduce using rule 83 (expression -> callFunction .)
    MINOR           reduce using rule 83 (expression -> callFunction .)
    MINOREQUAL      reduce using rule 83 (expression -> callFunction .)
    GREATER         reduce using rule 83 (expression -> callFunction .)
    GREATEREQUAL    reduce using rule 83 (expression -> callFunction .)
    AND             reduce using rule 83 (expression -> callFunction .)
    OR              reduce using rule 83 (expression -> callFunction .)


state 23

    (23) print -> CONSOLE . DOT LOG PARA expression_list PARC

    DOT             shift and go to state 73


state 24

    (92) expression_group -> PARA . expression PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 74
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 25

    (24) declarevar -> RVAR . ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> RVAR . ID EQUAL expression
    (26) declarevar -> RVAR . ID DOUBLEDOT type
    (33) declareArray -> RVAR . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> RVAR . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> RVAR . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (60) declareInterface -> RVAR . ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC

    ID              shift and go to state 77


state 26

    (30) assignVar -> ID . EQUAL expression
    (31) assignVar -> ID . PLUS EQUAL expression
    (32) assignVar -> ID . LESS EQUAL expression
    (39) assingArray -> ID . BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> ID . DOT RPUSH PARA expression PARC
    (64) modifyInterface -> ID . DOT ID EQUAL expression
    (72) callFunction -> ID . PARA expression_list PARC
    (73) callFunction -> ID . PARA PARC
    (98) id_ -> ID .
    (99) id_ -> ID . BRACKETO expression BRACKETC
    (118) arraysExpression -> ID . DOT RPOP PARA PARC
    (119) arraysExpression -> ID . DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> ID . DOT RJOIN PARA PARC
    (121) arraysExpression -> ID . DOT RLENGTH
    (93) callInterface -> ID . DOT ID
    (87) funcEmbebida -> ID . DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> ID . DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> ID . DOT RTOUPPERCASE PARA PARC

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    EQUAL           shift and go to state 78
    PLUS            shift and go to state 79
    LESS            shift and go to state 80
    BRACKETO        shift and go to state 81
    DOT             shift and go to state 82
    PARA            shift and go to state 83
    QUESTIONM       reduce using rule 98 (id_ -> ID .)
    BY              reduce using rule 98 (id_ -> ID .)
    DIVIDED         reduce using rule 98 (id_ -> ID .)
    MODUL           reduce using rule 98 (id_ -> ID .)
    DEQUAL          reduce using rule 98 (id_ -> ID .)
    DIFERENT        reduce using rule 98 (id_ -> ID .)
    MINOR           reduce using rule 98 (id_ -> ID .)
    MINOREQUAL      reduce using rule 98 (id_ -> ID .)
    GREATER         reduce using rule 98 (id_ -> ID .)
    GREATEREQUAL    reduce using rule 98 (id_ -> ID .)
    AND             reduce using rule 98 (id_ -> ID .)
    OR              reduce using rule 98 (id_ -> ID .)

  ! PLUS            [ reduce using rule 98 (id_ -> ID .) ]
  ! LESS            [ reduce using rule 98 (id_ -> ID .) ]


state 27

    (49) ternario -> expression . QUESTIONM expression DOUBLEDOT expression
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       shift and go to state 84
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 28

    (27) declareConst -> RCONST . ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> RCONST . ID EQUAL expression
    (29) declareConst -> RCONST . ID DOUBLEDOT type
    (36) declareArrayConst -> RCONST . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> RCONST . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> RCONST . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (61) declareInterface -> RCONST . ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC

    ID              shift and go to state 98


state 29

    (105) aritmetica -> LESS . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 99
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 30

    (41) if_else -> RIF . PARA expression PARC LLAVEA instrucciones LLAVEC else

    PARA            shift and go to state 100


state 31

    (45) case_inst -> RSWITCH . PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC

    PARA            shift and go to state 101


state 32

    (50) while_ -> RWHILE . PARA expression PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 102


state 33

    (51) for_ -> RFOR . PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> RFOR . PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 103


state 34

    (76) expression -> relacional .

    QUESTIONM       reduce using rule 76 (expression -> relacional .)
    PLUS            reduce using rule 76 (expression -> relacional .)
    BY              reduce using rule 76 (expression -> relacional .)
    DIVIDED         reduce using rule 76 (expression -> relacional .)
    LESS            reduce using rule 76 (expression -> relacional .)
    MODUL           reduce using rule 76 (expression -> relacional .)
    DEQUAL          reduce using rule 76 (expression -> relacional .)
    DIFERENT        reduce using rule 76 (expression -> relacional .)
    MINOR           reduce using rule 76 (expression -> relacional .)
    MINOREQUAL      reduce using rule 76 (expression -> relacional .)
    GREATER         reduce using rule 76 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 76 (expression -> relacional .)
    AND             reduce using rule 76 (expression -> relacional .)
    OR              reduce using rule 76 (expression -> relacional .)
    PARC            reduce using rule 76 (expression -> relacional .)
    SEMICOLON       reduce using rule 76 (expression -> relacional .)
    BRACKETC        reduce using rule 76 (expression -> relacional .)
    COMMA           reduce using rule 76 (expression -> relacional .)
    DOUBLEDOT       reduce using rule 76 (expression -> relacional .)
    LLAVEC          reduce using rule 76 (expression -> relacional .)


state 35

    (79) expression -> id_ .

    QUESTIONM       reduce using rule 79 (expression -> id_ .)
    PLUS            reduce using rule 79 (expression -> id_ .)
    BY              reduce using rule 79 (expression -> id_ .)
    DIVIDED         reduce using rule 79 (expression -> id_ .)
    LESS            reduce using rule 79 (expression -> id_ .)
    MODUL           reduce using rule 79 (expression -> id_ .)
    DEQUAL          reduce using rule 79 (expression -> id_ .)
    DIFERENT        reduce using rule 79 (expression -> id_ .)
    MINOR           reduce using rule 79 (expression -> id_ .)
    MINOREQUAL      reduce using rule 79 (expression -> id_ .)
    GREATER         reduce using rule 79 (expression -> id_ .)
    GREATEREQUAL    reduce using rule 79 (expression -> id_ .)
    AND             reduce using rule 79 (expression -> id_ .)
    OR              reduce using rule 79 (expression -> id_ .)
    PARC            reduce using rule 79 (expression -> id_ .)
    SEMICOLON       reduce using rule 79 (expression -> id_ .)
    BRACKETC        reduce using rule 79 (expression -> id_ .)
    COMMA           reduce using rule 79 (expression -> id_ .)
    DOUBLEDOT       reduce using rule 79 (expression -> id_ .)
    LLAVEC          reduce using rule 79 (expression -> id_ .)


state 36

    (53) transfer -> RBREAK .

    SEMICOLON       reduce using rule 53 (transfer -> RBREAK .)


state 37

    (54) transfer -> RCONTINUE .

    SEMICOLON       reduce using rule 54 (transfer -> RCONTINUE .)


state 38

    (55) transfer -> RRETURN .
    (56) transfer -> RRETURN . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    SEMICOLON       reduce using rule 55 (transfer -> RRETURN .)
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 104
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 39

    (57) createInterface -> RINTERFACE . ID LLAVEA attributesList LLAVEC

    ID              shift and go to state 105


state 40

    (65) declareFunction -> RFUNCTION . ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC

    ID              shift and go to state 106


state 41

    (74) expression -> primitivo .

    QUESTIONM       reduce using rule 74 (expression -> primitivo .)
    PLUS            reduce using rule 74 (expression -> primitivo .)
    BY              reduce using rule 74 (expression -> primitivo .)
    DIVIDED         reduce using rule 74 (expression -> primitivo .)
    LESS            reduce using rule 74 (expression -> primitivo .)
    MODUL           reduce using rule 74 (expression -> primitivo .)
    DEQUAL          reduce using rule 74 (expression -> primitivo .)
    DIFERENT        reduce using rule 74 (expression -> primitivo .)
    MINOR           reduce using rule 74 (expression -> primitivo .)
    MINOREQUAL      reduce using rule 74 (expression -> primitivo .)
    GREATER         reduce using rule 74 (expression -> primitivo .)
    GREATEREQUAL    reduce using rule 74 (expression -> primitivo .)
    AND             reduce using rule 74 (expression -> primitivo .)
    OR              reduce using rule 74 (expression -> primitivo .)
    PARC            reduce using rule 74 (expression -> primitivo .)
    SEMICOLON       reduce using rule 74 (expression -> primitivo .)
    BRACKETC        reduce using rule 74 (expression -> primitivo .)
    COMMA           reduce using rule 74 (expression -> primitivo .)
    DOUBLEDOT       reduce using rule 74 (expression -> primitivo .)
    LLAVEC          reduce using rule 74 (expression -> primitivo .)


state 42

    (75) expression -> aritmetica .

    QUESTIONM       reduce using rule 75 (expression -> aritmetica .)
    PLUS            reduce using rule 75 (expression -> aritmetica .)
    BY              reduce using rule 75 (expression -> aritmetica .)
    DIVIDED         reduce using rule 75 (expression -> aritmetica .)
    LESS            reduce using rule 75 (expression -> aritmetica .)
    MODUL           reduce using rule 75 (expression -> aritmetica .)
    DEQUAL          reduce using rule 75 (expression -> aritmetica .)
    DIFERENT        reduce using rule 75 (expression -> aritmetica .)
    MINOR           reduce using rule 75 (expression -> aritmetica .)
    MINOREQUAL      reduce using rule 75 (expression -> aritmetica .)
    GREATER         reduce using rule 75 (expression -> aritmetica .)
    GREATEREQUAL    reduce using rule 75 (expression -> aritmetica .)
    AND             reduce using rule 75 (expression -> aritmetica .)
    OR              reduce using rule 75 (expression -> aritmetica .)
    PARC            reduce using rule 75 (expression -> aritmetica .)
    SEMICOLON       reduce using rule 75 (expression -> aritmetica .)
    BRACKETC        reduce using rule 75 (expression -> aritmetica .)
    COMMA           reduce using rule 75 (expression -> aritmetica .)
    DOUBLEDOT       reduce using rule 75 (expression -> aritmetica .)
    LLAVEC          reduce using rule 75 (expression -> aritmetica .)


state 43

    (77) expression -> logica .

    QUESTIONM       reduce using rule 77 (expression -> logica .)
    PLUS            reduce using rule 77 (expression -> logica .)
    BY              reduce using rule 77 (expression -> logica .)
    DIVIDED         reduce using rule 77 (expression -> logica .)
    LESS            reduce using rule 77 (expression -> logica .)
    MODUL           reduce using rule 77 (expression -> logica .)
    DEQUAL          reduce using rule 77 (expression -> logica .)
    DIFERENT        reduce using rule 77 (expression -> logica .)
    MINOR           reduce using rule 77 (expression -> logica .)
    MINOREQUAL      reduce using rule 77 (expression -> logica .)
    GREATER         reduce using rule 77 (expression -> logica .)
    GREATEREQUAL    reduce using rule 77 (expression -> logica .)
    AND             reduce using rule 77 (expression -> logica .)
    OR              reduce using rule 77 (expression -> logica .)
    PARC            reduce using rule 77 (expression -> logica .)
    SEMICOLON       reduce using rule 77 (expression -> logica .)
    BRACKETC        reduce using rule 77 (expression -> logica .)
    COMMA           reduce using rule 77 (expression -> logica .)
    DOUBLEDOT       reduce using rule 77 (expression -> logica .)
    LLAVEC          reduce using rule 77 (expression -> logica .)


state 44

    (78) expression -> expression_group .

    QUESTIONM       reduce using rule 78 (expression -> expression_group .)
    PLUS            reduce using rule 78 (expression -> expression_group .)
    BY              reduce using rule 78 (expression -> expression_group .)
    DIVIDED         reduce using rule 78 (expression -> expression_group .)
    LESS            reduce using rule 78 (expression -> expression_group .)
    MODUL           reduce using rule 78 (expression -> expression_group .)
    DEQUAL          reduce using rule 78 (expression -> expression_group .)
    DIFERENT        reduce using rule 78 (expression -> expression_group .)
    MINOR           reduce using rule 78 (expression -> expression_group .)
    MINOREQUAL      reduce using rule 78 (expression -> expression_group .)
    GREATER         reduce using rule 78 (expression -> expression_group .)
    GREATEREQUAL    reduce using rule 78 (expression -> expression_group .)
    AND             reduce using rule 78 (expression -> expression_group .)
    OR              reduce using rule 78 (expression -> expression_group .)
    PARC            reduce using rule 78 (expression -> expression_group .)
    SEMICOLON       reduce using rule 78 (expression -> expression_group .)
    BRACKETC        reduce using rule 78 (expression -> expression_group .)
    COMMA           reduce using rule 78 (expression -> expression_group .)
    DOUBLEDOT       reduce using rule 78 (expression -> expression_group .)
    LLAVEC          reduce using rule 78 (expression -> expression_group .)


state 45

    (80) expression -> arraysExpression .

    QUESTIONM       reduce using rule 80 (expression -> arraysExpression .)
    PLUS            reduce using rule 80 (expression -> arraysExpression .)
    BY              reduce using rule 80 (expression -> arraysExpression .)
    DIVIDED         reduce using rule 80 (expression -> arraysExpression .)
    LESS            reduce using rule 80 (expression -> arraysExpression .)
    MODUL           reduce using rule 80 (expression -> arraysExpression .)
    DEQUAL          reduce using rule 80 (expression -> arraysExpression .)
    DIFERENT        reduce using rule 80 (expression -> arraysExpression .)
    MINOR           reduce using rule 80 (expression -> arraysExpression .)
    MINOREQUAL      reduce using rule 80 (expression -> arraysExpression .)
    GREATER         reduce using rule 80 (expression -> arraysExpression .)
    GREATEREQUAL    reduce using rule 80 (expression -> arraysExpression .)
    AND             reduce using rule 80 (expression -> arraysExpression .)
    OR              reduce using rule 80 (expression -> arraysExpression .)
    PARC            reduce using rule 80 (expression -> arraysExpression .)
    SEMICOLON       reduce using rule 80 (expression -> arraysExpression .)
    BRACKETC        reduce using rule 80 (expression -> arraysExpression .)
    COMMA           reduce using rule 80 (expression -> arraysExpression .)
    DOUBLEDOT       reduce using rule 80 (expression -> arraysExpression .)
    LLAVEC          reduce using rule 80 (expression -> arraysExpression .)


state 46

    (81) expression -> callInterface .

    QUESTIONM       reduce using rule 81 (expression -> callInterface .)
    PLUS            reduce using rule 81 (expression -> callInterface .)
    BY              reduce using rule 81 (expression -> callInterface .)
    DIVIDED         reduce using rule 81 (expression -> callInterface .)
    LESS            reduce using rule 81 (expression -> callInterface .)
    MODUL           reduce using rule 81 (expression -> callInterface .)
    DEQUAL          reduce using rule 81 (expression -> callInterface .)
    DIFERENT        reduce using rule 81 (expression -> callInterface .)
    MINOR           reduce using rule 81 (expression -> callInterface .)
    MINOREQUAL      reduce using rule 81 (expression -> callInterface .)
    GREATER         reduce using rule 81 (expression -> callInterface .)
    GREATEREQUAL    reduce using rule 81 (expression -> callInterface .)
    AND             reduce using rule 81 (expression -> callInterface .)
    OR              reduce using rule 81 (expression -> callInterface .)
    PARC            reduce using rule 81 (expression -> callInterface .)
    SEMICOLON       reduce using rule 81 (expression -> callInterface .)
    BRACKETC        reduce using rule 81 (expression -> callInterface .)
    COMMA           reduce using rule 81 (expression -> callInterface .)
    DOUBLEDOT       reduce using rule 81 (expression -> callInterface .)
    LLAVEC          reduce using rule 81 (expression -> callInterface .)


state 47

    (82) expression -> boolean .

    QUESTIONM       reduce using rule 82 (expression -> boolean .)
    PLUS            reduce using rule 82 (expression -> boolean .)
    BY              reduce using rule 82 (expression -> boolean .)
    DIVIDED         reduce using rule 82 (expression -> boolean .)
    LESS            reduce using rule 82 (expression -> boolean .)
    MODUL           reduce using rule 82 (expression -> boolean .)
    DEQUAL          reduce using rule 82 (expression -> boolean .)
    DIFERENT        reduce using rule 82 (expression -> boolean .)
    MINOR           reduce using rule 82 (expression -> boolean .)
    MINOREQUAL      reduce using rule 82 (expression -> boolean .)
    GREATER         reduce using rule 82 (expression -> boolean .)
    GREATEREQUAL    reduce using rule 82 (expression -> boolean .)
    AND             reduce using rule 82 (expression -> boolean .)
    OR              reduce using rule 82 (expression -> boolean .)
    PARC            reduce using rule 82 (expression -> boolean .)
    SEMICOLON       reduce using rule 82 (expression -> boolean .)
    BRACKETC        reduce using rule 82 (expression -> boolean .)
    COMMA           reduce using rule 82 (expression -> boolean .)
    DOUBLEDOT       reduce using rule 82 (expression -> boolean .)
    LLAVEC          reduce using rule 82 (expression -> boolean .)


state 48

    (84) expression -> funcEmbebida .

    QUESTIONM       reduce using rule 84 (expression -> funcEmbebida .)
    PLUS            reduce using rule 84 (expression -> funcEmbebida .)
    BY              reduce using rule 84 (expression -> funcEmbebida .)
    DIVIDED         reduce using rule 84 (expression -> funcEmbebida .)
    LESS            reduce using rule 84 (expression -> funcEmbebida .)
    MODUL           reduce using rule 84 (expression -> funcEmbebida .)
    DEQUAL          reduce using rule 84 (expression -> funcEmbebida .)
    DIFERENT        reduce using rule 84 (expression -> funcEmbebida .)
    MINOR           reduce using rule 84 (expression -> funcEmbebida .)
    MINOREQUAL      reduce using rule 84 (expression -> funcEmbebida .)
    GREATER         reduce using rule 84 (expression -> funcEmbebida .)
    GREATEREQUAL    reduce using rule 84 (expression -> funcEmbebida .)
    AND             reduce using rule 84 (expression -> funcEmbebida .)
    OR              reduce using rule 84 (expression -> funcEmbebida .)
    PARC            reduce using rule 84 (expression -> funcEmbebida .)
    SEMICOLON       reduce using rule 84 (expression -> funcEmbebida .)
    BRACKETC        reduce using rule 84 (expression -> funcEmbebida .)
    COMMA           reduce using rule 84 (expression -> funcEmbebida .)
    DOUBLEDOT       reduce using rule 84 (expression -> funcEmbebida .)
    LLAVEC          reduce using rule 84 (expression -> funcEmbebida .)


state 49

    (115) primitivo -> NUMBER .

    QUESTIONM       reduce using rule 115 (primitivo -> NUMBER .)
    PLUS            reduce using rule 115 (primitivo -> NUMBER .)
    BY              reduce using rule 115 (primitivo -> NUMBER .)
    DIVIDED         reduce using rule 115 (primitivo -> NUMBER .)
    LESS            reduce using rule 115 (primitivo -> NUMBER .)
    MODUL           reduce using rule 115 (primitivo -> NUMBER .)
    DEQUAL          reduce using rule 115 (primitivo -> NUMBER .)
    DIFERENT        reduce using rule 115 (primitivo -> NUMBER .)
    MINOR           reduce using rule 115 (primitivo -> NUMBER .)
    MINOREQUAL      reduce using rule 115 (primitivo -> NUMBER .)
    GREATER         reduce using rule 115 (primitivo -> NUMBER .)
    GREATEREQUAL    reduce using rule 115 (primitivo -> NUMBER .)
    AND             reduce using rule 115 (primitivo -> NUMBER .)
    OR              reduce using rule 115 (primitivo -> NUMBER .)
    PARC            reduce using rule 115 (primitivo -> NUMBER .)
    SEMICOLON       reduce using rule 115 (primitivo -> NUMBER .)
    BRACKETC        reduce using rule 115 (primitivo -> NUMBER .)
    COMMA           reduce using rule 115 (primitivo -> NUMBER .)
    DOUBLEDOT       reduce using rule 115 (primitivo -> NUMBER .)
    LLAVEC          reduce using rule 115 (primitivo -> NUMBER .)


state 50

    (116) primitivo -> FLOAT .

    QUESTIONM       reduce using rule 116 (primitivo -> FLOAT .)
    PLUS            reduce using rule 116 (primitivo -> FLOAT .)
    BY              reduce using rule 116 (primitivo -> FLOAT .)
    DIVIDED         reduce using rule 116 (primitivo -> FLOAT .)
    LESS            reduce using rule 116 (primitivo -> FLOAT .)
    MODUL           reduce using rule 116 (primitivo -> FLOAT .)
    DEQUAL          reduce using rule 116 (primitivo -> FLOAT .)
    DIFERENT        reduce using rule 116 (primitivo -> FLOAT .)
    MINOR           reduce using rule 116 (primitivo -> FLOAT .)
    MINOREQUAL      reduce using rule 116 (primitivo -> FLOAT .)
    GREATER         reduce using rule 116 (primitivo -> FLOAT .)
    GREATEREQUAL    reduce using rule 116 (primitivo -> FLOAT .)
    AND             reduce using rule 116 (primitivo -> FLOAT .)
    OR              reduce using rule 116 (primitivo -> FLOAT .)
    PARC            reduce using rule 116 (primitivo -> FLOAT .)
    SEMICOLON       reduce using rule 116 (primitivo -> FLOAT .)
    BRACKETC        reduce using rule 116 (primitivo -> FLOAT .)
    COMMA           reduce using rule 116 (primitivo -> FLOAT .)
    DOUBLEDOT       reduce using rule 116 (primitivo -> FLOAT .)
    LLAVEC          reduce using rule 116 (primitivo -> FLOAT .)


state 51

    (117) primitivo -> STRING .

    QUESTIONM       reduce using rule 117 (primitivo -> STRING .)
    PLUS            reduce using rule 117 (primitivo -> STRING .)
    BY              reduce using rule 117 (primitivo -> STRING .)
    DIVIDED         reduce using rule 117 (primitivo -> STRING .)
    LESS            reduce using rule 117 (primitivo -> STRING .)
    MODUL           reduce using rule 117 (primitivo -> STRING .)
    DEQUAL          reduce using rule 117 (primitivo -> STRING .)
    DIFERENT        reduce using rule 117 (primitivo -> STRING .)
    MINOR           reduce using rule 117 (primitivo -> STRING .)
    MINOREQUAL      reduce using rule 117 (primitivo -> STRING .)
    GREATER         reduce using rule 117 (primitivo -> STRING .)
    GREATEREQUAL    reduce using rule 117 (primitivo -> STRING .)
    AND             reduce using rule 117 (primitivo -> STRING .)
    OR              reduce using rule 117 (primitivo -> STRING .)
    PARC            reduce using rule 117 (primitivo -> STRING .)
    SEMICOLON       reduce using rule 117 (primitivo -> STRING .)
    BRACKETC        reduce using rule 117 (primitivo -> STRING .)
    COMMA           reduce using rule 117 (primitivo -> STRING .)
    DOUBLEDOT       reduce using rule 117 (primitivo -> STRING .)
    LLAVEC          reduce using rule 117 (primitivo -> STRING .)


state 52

    (114) logica -> NOT . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 107
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 53

    (94) callInterface -> ROBJECT . DOT RKEYS PARA ID PARC
    (95) callInterface -> ROBJECT . DOT RVALUES PARA ID PARC

    DOT             shift and go to state 108


state 54

    (122) boolean -> TRUE .

    QUESTIONM       reduce using rule 122 (boolean -> TRUE .)
    PLUS            reduce using rule 122 (boolean -> TRUE .)
    BY              reduce using rule 122 (boolean -> TRUE .)
    DIVIDED         reduce using rule 122 (boolean -> TRUE .)
    LESS            reduce using rule 122 (boolean -> TRUE .)
    MODUL           reduce using rule 122 (boolean -> TRUE .)
    DEQUAL          reduce using rule 122 (boolean -> TRUE .)
    DIFERENT        reduce using rule 122 (boolean -> TRUE .)
    MINOR           reduce using rule 122 (boolean -> TRUE .)
    MINOREQUAL      reduce using rule 122 (boolean -> TRUE .)
    GREATER         reduce using rule 122 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 122 (boolean -> TRUE .)
    AND             reduce using rule 122 (boolean -> TRUE .)
    OR              reduce using rule 122 (boolean -> TRUE .)
    PARC            reduce using rule 122 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 122 (boolean -> TRUE .)
    BRACKETC        reduce using rule 122 (boolean -> TRUE .)
    COMMA           reduce using rule 122 (boolean -> TRUE .)
    DOUBLEDOT       reduce using rule 122 (boolean -> TRUE .)
    LLAVEC          reduce using rule 122 (boolean -> TRUE .)


state 55

    (123) boolean -> FALSE .
    (88) funcEmbebida -> FALSE . DOT RTOSTRING PARA PARC

    QUESTIONM       reduce using rule 123 (boolean -> FALSE .)
    PLUS            reduce using rule 123 (boolean -> FALSE .)
    BY              reduce using rule 123 (boolean -> FALSE .)
    DIVIDED         reduce using rule 123 (boolean -> FALSE .)
    LESS            reduce using rule 123 (boolean -> FALSE .)
    MODUL           reduce using rule 123 (boolean -> FALSE .)
    DEQUAL          reduce using rule 123 (boolean -> FALSE .)
    DIFERENT        reduce using rule 123 (boolean -> FALSE .)
    MINOR           reduce using rule 123 (boolean -> FALSE .)
    MINOREQUAL      reduce using rule 123 (boolean -> FALSE .)
    GREATER         reduce using rule 123 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 123 (boolean -> FALSE .)
    AND             reduce using rule 123 (boolean -> FALSE .)
    OR              reduce using rule 123 (boolean -> FALSE .)
    PARC            reduce using rule 123 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 123 (boolean -> FALSE .)
    BRACKETC        reduce using rule 123 (boolean -> FALSE .)
    COMMA           reduce using rule 123 (boolean -> FALSE .)
    DOUBLEDOT       reduce using rule 123 (boolean -> FALSE .)
    LLAVEC          reduce using rule 123 (boolean -> FALSE .)
    DOT             shift and go to state 109


state 56

    (85) funcEmbebida -> RPARSEINT . PARA expression PARC

    PARA            shift and go to state 110


state 57

    (86) funcEmbebida -> RPARSEFLOAT . PARA expression PARC

    PARA            shift and go to state 111


state 58

    (91) funcEmbebida -> RTYPEOF . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 112
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 59

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RVAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONST          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RSWITCH         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RBREAK          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONTINUE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RRETURN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RINTERFACE      reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFUNCTION       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NUMBER          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LESS            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ROBJECT         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RPARSEINT       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RPARSEFLOAT     reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RTYPEOF         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEC          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RDEFAULT        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCASE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 60

    (4) instruccion -> print SEMICOLON .

    CONSOLE         reduce using rule 4 (instruccion -> print SEMICOLON .)
    RVAR            reduce using rule 4 (instruccion -> print SEMICOLON .)
    RCONST          reduce using rule 4 (instruccion -> print SEMICOLON .)
    ID              reduce using rule 4 (instruccion -> print SEMICOLON .)
    RIF             reduce using rule 4 (instruccion -> print SEMICOLON .)
    RSWITCH         reduce using rule 4 (instruccion -> print SEMICOLON .)
    RWHILE          reduce using rule 4 (instruccion -> print SEMICOLON .)
    RFOR            reduce using rule 4 (instruccion -> print SEMICOLON .)
    RBREAK          reduce using rule 4 (instruccion -> print SEMICOLON .)
    RCONTINUE       reduce using rule 4 (instruccion -> print SEMICOLON .)
    RRETURN         reduce using rule 4 (instruccion -> print SEMICOLON .)
    RINTERFACE      reduce using rule 4 (instruccion -> print SEMICOLON .)
    RFUNCTION       reduce using rule 4 (instruccion -> print SEMICOLON .)
    NUMBER          reduce using rule 4 (instruccion -> print SEMICOLON .)
    FLOAT           reduce using rule 4 (instruccion -> print SEMICOLON .)
    STRING          reduce using rule 4 (instruccion -> print SEMICOLON .)
    LESS            reduce using rule 4 (instruccion -> print SEMICOLON .)
    NOT             reduce using rule 4 (instruccion -> print SEMICOLON .)
    PARA            reduce using rule 4 (instruccion -> print SEMICOLON .)
    ROBJECT         reduce using rule 4 (instruccion -> print SEMICOLON .)
    TRUE            reduce using rule 4 (instruccion -> print SEMICOLON .)
    FALSE           reduce using rule 4 (instruccion -> print SEMICOLON .)
    RPARSEINT       reduce using rule 4 (instruccion -> print SEMICOLON .)
    RPARSEFLOAT     reduce using rule 4 (instruccion -> print SEMICOLON .)
    RTYPEOF         reduce using rule 4 (instruccion -> print SEMICOLON .)
    $end            reduce using rule 4 (instruccion -> print SEMICOLON .)
    LLAVEC          reduce using rule 4 (instruccion -> print SEMICOLON .)
    RDEFAULT        reduce using rule 4 (instruccion -> print SEMICOLON .)
    RCASE           reduce using rule 4 (instruccion -> print SEMICOLON .)


state 61

    (5) instruccion -> declarevar SEMICOLON .

    CONSOLE         reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RVAR            reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RCONST          reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    ID              reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RIF             reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RSWITCH         reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RWHILE          reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RFOR            reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RBREAK          reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RCONTINUE       reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RRETURN         reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RINTERFACE      reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RFUNCTION       reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    NUMBER          reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    FLOAT           reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    STRING          reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    LESS            reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    NOT             reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    PARA            reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    ROBJECT         reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    TRUE            reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    FALSE           reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RPARSEINT       reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RPARSEFLOAT     reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RTYPEOF         reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    $end            reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    LLAVEC          reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RDEFAULT        reduce using rule 5 (instruccion -> declarevar SEMICOLON .)
    RCASE           reduce using rule 5 (instruccion -> declarevar SEMICOLON .)


state 62

    (6) instruccion -> declareConst SEMICOLON .

    CONSOLE         reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RVAR            reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RCONST          reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    ID              reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RIF             reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RSWITCH         reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RWHILE          reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RFOR            reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RBREAK          reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RCONTINUE       reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RRETURN         reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RINTERFACE      reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RFUNCTION       reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    NUMBER          reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    FLOAT           reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    STRING          reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    LESS            reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    NOT             reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    PARA            reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    ROBJECT         reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    TRUE            reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    FALSE           reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RPARSEINT       reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RPARSEFLOAT     reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RTYPEOF         reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    $end            reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    LLAVEC          reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RDEFAULT        reduce using rule 6 (instruccion -> declareConst SEMICOLON .)
    RCASE           reduce using rule 6 (instruccion -> declareConst SEMICOLON .)


state 63

    (7) instruccion -> assignVar SEMICOLON .

    CONSOLE         reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RVAR            reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RCONST          reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    ID              reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RIF             reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RSWITCH         reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RWHILE          reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RFOR            reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RBREAK          reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RCONTINUE       reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RRETURN         reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RINTERFACE      reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RFUNCTION       reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    NUMBER          reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    FLOAT           reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    STRING          reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    LESS            reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    NOT             reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    PARA            reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    ROBJECT         reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    TRUE            reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    FALSE           reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RPARSEINT       reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RPARSEFLOAT     reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RTYPEOF         reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    $end            reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    LLAVEC          reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RDEFAULT        reduce using rule 7 (instruccion -> assignVar SEMICOLON .)
    RCASE           reduce using rule 7 (instruccion -> assignVar SEMICOLON .)


state 64

    (8) instruccion -> declareArray SEMICOLON .

    CONSOLE         reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RVAR            reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RCONST          reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    ID              reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RIF             reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RSWITCH         reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RWHILE          reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RFOR            reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RBREAK          reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RCONTINUE       reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RRETURN         reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RINTERFACE      reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RFUNCTION       reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    NUMBER          reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    FLOAT           reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    STRING          reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    LESS            reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    NOT             reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    PARA            reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    ROBJECT         reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    TRUE            reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    FALSE           reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RPARSEINT       reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RPARSEFLOAT     reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RTYPEOF         reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    $end            reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    LLAVEC          reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RDEFAULT        reduce using rule 8 (instruccion -> declareArray SEMICOLON .)
    RCASE           reduce using rule 8 (instruccion -> declareArray SEMICOLON .)


state 65

    (9) instruccion -> declareArrayConst SEMICOLON .

    CONSOLE         reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RVAR            reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RCONST          reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    ID              reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RIF             reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RSWITCH         reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RWHILE          reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RFOR            reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RBREAK          reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RCONTINUE       reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RRETURN         reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RINTERFACE      reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RFUNCTION       reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    NUMBER          reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    FLOAT           reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    STRING          reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    LESS            reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    NOT             reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    PARA            reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    ROBJECT         reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    TRUE            reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    FALSE           reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RPARSEINT       reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RPARSEFLOAT     reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RTYPEOF         reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    $end            reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    LLAVEC          reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RDEFAULT        reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)
    RCASE           reduce using rule 9 (instruccion -> declareArrayConst SEMICOLON .)


state 66

    (10) instruccion -> assingArray SEMICOLON .

    CONSOLE         reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RVAR            reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RCONST          reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    ID              reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RIF             reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RSWITCH         reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RWHILE          reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RFOR            reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RBREAK          reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RCONTINUE       reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RRETURN         reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RINTERFACE      reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RFUNCTION       reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    NUMBER          reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    FLOAT           reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    STRING          reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    LESS            reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    NOT             reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    PARA            reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    ROBJECT         reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    TRUE            reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    FALSE           reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RPARSEINT       reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RPARSEFLOAT     reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RTYPEOF         reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    $end            reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    LLAVEC          reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RDEFAULT        reduce using rule 10 (instruccion -> assingArray SEMICOLON .)
    RCASE           reduce using rule 10 (instruccion -> assingArray SEMICOLON .)


state 67

    (11) instruccion -> arrayFuncs SEMICOLON .

    CONSOLE         reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RVAR            reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RCONST          reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    ID              reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RIF             reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RSWITCH         reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RWHILE          reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RFOR            reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RBREAK          reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RCONTINUE       reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RRETURN         reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RINTERFACE      reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RFUNCTION       reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    NUMBER          reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    FLOAT           reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    STRING          reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    LESS            reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    NOT             reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    PARA            reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    ROBJECT         reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    TRUE            reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    FALSE           reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RPARSEINT       reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RPARSEFLOAT     reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RTYPEOF         reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    $end            reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    LLAVEC          reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RDEFAULT        reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)
    RCASE           reduce using rule 11 (instruccion -> arrayFuncs SEMICOLON .)


state 68

    (14) instruccion -> ternario SEMICOLON .

    CONSOLE         reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RVAR            reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RCONST          reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    ID              reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RIF             reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RSWITCH         reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RWHILE          reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RFOR            reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RBREAK          reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RCONTINUE       reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RRETURN         reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RINTERFACE      reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RFUNCTION       reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    NUMBER          reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    FLOAT           reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    STRING          reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    LESS            reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    NOT             reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    PARA            reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    ROBJECT         reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    TRUE            reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    FALSE           reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RPARSEINT       reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RPARSEFLOAT     reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RTYPEOF         reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    $end            reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    LLAVEC          reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RDEFAULT        reduce using rule 14 (instruccion -> ternario SEMICOLON .)
    RCASE           reduce using rule 14 (instruccion -> ternario SEMICOLON .)


state 69

    (17) instruccion -> transfer SEMICOLON .

    CONSOLE         reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RVAR            reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RCONST          reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    ID              reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RIF             reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RSWITCH         reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RWHILE          reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RFOR            reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RBREAK          reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RCONTINUE       reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RRETURN         reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RINTERFACE      reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RFUNCTION       reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    NUMBER          reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    FLOAT           reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    STRING          reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    LESS            reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    NOT             reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    PARA            reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    ROBJECT         reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    TRUE            reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    FALSE           reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RPARSEINT       reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RPARSEFLOAT     reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RTYPEOF         reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    $end            reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    LLAVEC          reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RDEFAULT        reduce using rule 17 (instruccion -> transfer SEMICOLON .)
    RCASE           reduce using rule 17 (instruccion -> transfer SEMICOLON .)


state 70

    (19) instruccion -> declareInterface SEMICOLON .

    CONSOLE         reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RVAR            reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RCONST          reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    ID              reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RIF             reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RSWITCH         reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RWHILE          reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RFOR            reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RBREAK          reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RCONTINUE       reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RRETURN         reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RINTERFACE      reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RFUNCTION       reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    NUMBER          reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    FLOAT           reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    STRING          reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    LESS            reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    NOT             reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    PARA            reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    ROBJECT         reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    TRUE            reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    FALSE           reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RPARSEINT       reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RPARSEFLOAT     reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RTYPEOF         reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    $end            reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    LLAVEC          reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RDEFAULT        reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)
    RCASE           reduce using rule 19 (instruccion -> declareInterface SEMICOLON .)


state 71

    (20) instruccion -> modifyInterface SEMICOLON .

    CONSOLE         reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RVAR            reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RCONST          reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    ID              reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RIF             reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RSWITCH         reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RWHILE          reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RFOR            reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RBREAK          reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RCONTINUE       reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RRETURN         reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RINTERFACE      reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RFUNCTION       reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    NUMBER          reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    FLOAT           reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    STRING          reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    LESS            reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    NOT             reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    PARA            reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    ROBJECT         reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    TRUE            reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    FALSE           reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RPARSEINT       reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RPARSEFLOAT     reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RTYPEOF         reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    $end            reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    LLAVEC          reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RDEFAULT        reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)
    RCASE           reduce using rule 20 (instruccion -> modifyInterface SEMICOLON .)


state 72

    (22) instruccion -> callFunction SEMICOLON .

    CONSOLE         reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RVAR            reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RCONST          reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    ID              reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RIF             reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RSWITCH         reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RWHILE          reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RFOR            reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RBREAK          reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RCONTINUE       reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RRETURN         reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RINTERFACE      reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RFUNCTION       reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    NUMBER          reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    FLOAT           reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    STRING          reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    LESS            reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    NOT             reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    PARA            reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    ROBJECT         reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    TRUE            reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    FALSE           reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RPARSEINT       reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RPARSEFLOAT     reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RTYPEOF         reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    $end            reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    LLAVEC          reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RDEFAULT        reduce using rule 22 (instruccion -> callFunction SEMICOLON .)
    RCASE           reduce using rule 22 (instruccion -> callFunction SEMICOLON .)


state 73

    (23) print -> CONSOLE DOT . LOG PARA expression_list PARC

    LOG             shift and go to state 113


state 74

    (92) expression_group -> PARA expression . PARC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            shift and go to state 114
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 75

    (83) expression -> callFunction .

    PARC            reduce using rule 83 (expression -> callFunction .)
    PLUS            reduce using rule 83 (expression -> callFunction .)
    BY              reduce using rule 83 (expression -> callFunction .)
    DIVIDED         reduce using rule 83 (expression -> callFunction .)
    LESS            reduce using rule 83 (expression -> callFunction .)
    MODUL           reduce using rule 83 (expression -> callFunction .)
    DEQUAL          reduce using rule 83 (expression -> callFunction .)
    DIFERENT        reduce using rule 83 (expression -> callFunction .)
    MINOR           reduce using rule 83 (expression -> callFunction .)
    MINOREQUAL      reduce using rule 83 (expression -> callFunction .)
    GREATER         reduce using rule 83 (expression -> callFunction .)
    GREATEREQUAL    reduce using rule 83 (expression -> callFunction .)
    AND             reduce using rule 83 (expression -> callFunction .)
    OR              reduce using rule 83 (expression -> callFunction .)
    QUESTIONM       reduce using rule 83 (expression -> callFunction .)
    SEMICOLON       reduce using rule 83 (expression -> callFunction .)
    BRACKETC        reduce using rule 83 (expression -> callFunction .)
    COMMA           reduce using rule 83 (expression -> callFunction .)
    DOUBLEDOT       reduce using rule 83 (expression -> callFunction .)
    LLAVEC          reduce using rule 83 (expression -> callFunction .)


state 76

    (98) id_ -> ID .
    (99) id_ -> ID . BRACKETO expression BRACKETC
    (118) arraysExpression -> ID . DOT RPOP PARA PARC
    (119) arraysExpression -> ID . DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> ID . DOT RJOIN PARA PARC
    (121) arraysExpression -> ID . DOT RLENGTH
    (93) callInterface -> ID . DOT ID
    (72) callFunction -> ID . PARA expression_list PARC
    (73) callFunction -> ID . PARA PARC
    (87) funcEmbebida -> ID . DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> ID . DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> ID . DOT RTOUPPERCASE PARA PARC

    PARC            reduce using rule 98 (id_ -> ID .)
    PLUS            reduce using rule 98 (id_ -> ID .)
    BY              reduce using rule 98 (id_ -> ID .)
    DIVIDED         reduce using rule 98 (id_ -> ID .)
    LESS            reduce using rule 98 (id_ -> ID .)
    MODUL           reduce using rule 98 (id_ -> ID .)
    DEQUAL          reduce using rule 98 (id_ -> ID .)
    DIFERENT        reduce using rule 98 (id_ -> ID .)
    MINOR           reduce using rule 98 (id_ -> ID .)
    MINOREQUAL      reduce using rule 98 (id_ -> ID .)
    GREATER         reduce using rule 98 (id_ -> ID .)
    GREATEREQUAL    reduce using rule 98 (id_ -> ID .)
    AND             reduce using rule 98 (id_ -> ID .)
    OR              reduce using rule 98 (id_ -> ID .)
    QUESTIONM       reduce using rule 98 (id_ -> ID .)
    SEMICOLON       reduce using rule 98 (id_ -> ID .)
    BRACKETC        reduce using rule 98 (id_ -> ID .)
    COMMA           reduce using rule 98 (id_ -> ID .)
    DOUBLEDOT       reduce using rule 98 (id_ -> ID .)
    LLAVEC          reduce using rule 98 (id_ -> ID .)
    BRACKETO        shift and go to state 115
    DOT             shift and go to state 116
    PARA            shift and go to state 83


state 77

    (24) declarevar -> RVAR ID . DOUBLEDOT type EQUAL expression
    (25) declarevar -> RVAR ID . EQUAL expression
    (26) declarevar -> RVAR ID . DOUBLEDOT type
    (33) declareArray -> RVAR ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> RVAR ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> RVAR ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (60) declareInterface -> RVAR ID . DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC

    DOUBLEDOT       shift and go to state 117
    EQUAL           shift and go to state 118


state 78

    (30) assignVar -> ID EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 119
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 79

    (31) assignVar -> ID PLUS . EQUAL expression

    EQUAL           shift and go to state 120


state 80

    (32) assignVar -> ID LESS . EQUAL expression

    EQUAL           shift and go to state 121


state 81

    (39) assingArray -> ID BRACKETO . expression BRACKETC EQUAL expression
    (99) id_ -> ID BRACKETO . expression BRACKETC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 122
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 82

    (40) arrayFuncs -> ID DOT . RPUSH PARA expression PARC
    (64) modifyInterface -> ID DOT . ID EQUAL expression
    (118) arraysExpression -> ID DOT . RPOP PARA PARC
    (119) arraysExpression -> ID DOT . RINDEXOF PARA expression PARC
    (120) arraysExpression -> ID DOT . RJOIN PARA PARC
    (121) arraysExpression -> ID DOT . RLENGTH
    (93) callInterface -> ID DOT . ID
    (87) funcEmbebida -> ID DOT . RTOSTRING PARA PARC
    (89) funcEmbebida -> ID DOT . RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> ID DOT . RTOUPPERCASE PARA PARC

    RPUSH           shift and go to state 124
    ID              shift and go to state 123
    RPOP            shift and go to state 125
    RINDEXOF        shift and go to state 126
    RJOIN           shift and go to state 127
    RLENGTH         shift and go to state 128
    RTOSTRING       shift and go to state 129
    RTOLOWERCASE    shift and go to state 130
    RTOUPPERCASE    shift and go to state 131


state 83

    (72) callFunction -> ID PARA . expression_list PARC
    (73) callFunction -> ID PARA . PARC
    (96) expression_list -> . expression_list COMMA expression
    (97) expression_list -> . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    PARC            shift and go to state 133
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression_list                shift and go to state 132
    expression                     shift and go to state 134
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 84

    (49) ternario -> expression QUESTIONM . expression DOUBLEDOT expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 135
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 85

    (100) aritmetica -> expression PLUS . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 136
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 86

    (101) aritmetica -> expression BY . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 137
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 87

    (102) aritmetica -> expression DIVIDED . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 138
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 88

    (103) aritmetica -> expression LESS . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 139
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 89

    (104) aritmetica -> expression MODUL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 140
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 90

    (106) relacional -> expression DEQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 141
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 91

    (107) relacional -> expression DIFERENT . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 142
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 92

    (108) relacional -> expression MINOR . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 143
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 93

    (109) relacional -> expression MINOREQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 144
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 94

    (110) relacional -> expression GREATER . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 145
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 95

    (111) relacional -> expression GREATEREQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 146
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 96

    (112) logica -> expression AND . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 147
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 97

    (113) logica -> expression OR . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 148
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 98

    (27) declareConst -> RCONST ID . DOUBLEDOT type EQUAL expression
    (28) declareConst -> RCONST ID . EQUAL expression
    (29) declareConst -> RCONST ID . DOUBLEDOT type
    (36) declareArrayConst -> RCONST ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> RCONST ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> RCONST ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (61) declareInterface -> RCONST ID . DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC

    DOUBLEDOT       shift and go to state 149
    EQUAL           shift and go to state 150


state 99

    (105) aritmetica -> LESS expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 105 (aritmetica -> LESS expression .)
    PLUS            reduce using rule 105 (aritmetica -> LESS expression .)
    BY              reduce using rule 105 (aritmetica -> LESS expression .)
    DIVIDED         reduce using rule 105 (aritmetica -> LESS expression .)
    LESS            reduce using rule 105 (aritmetica -> LESS expression .)
    MODUL           reduce using rule 105 (aritmetica -> LESS expression .)
    DEQUAL          reduce using rule 105 (aritmetica -> LESS expression .)
    DIFERENT        reduce using rule 105 (aritmetica -> LESS expression .)
    MINOR           reduce using rule 105 (aritmetica -> LESS expression .)
    MINOREQUAL      reduce using rule 105 (aritmetica -> LESS expression .)
    GREATER         reduce using rule 105 (aritmetica -> LESS expression .)
    GREATEREQUAL    reduce using rule 105 (aritmetica -> LESS expression .)
    AND             reduce using rule 105 (aritmetica -> LESS expression .)
    OR              reduce using rule 105 (aritmetica -> LESS expression .)
    PARC            reduce using rule 105 (aritmetica -> LESS expression .)
    SEMICOLON       reduce using rule 105 (aritmetica -> LESS expression .)
    BRACKETC        reduce using rule 105 (aritmetica -> LESS expression .)
    COMMA           reduce using rule 105 (aritmetica -> LESS expression .)
    DOUBLEDOT       reduce using rule 105 (aritmetica -> LESS expression .)
    LLAVEC          reduce using rule 105 (aritmetica -> LESS expression .)

  ! PLUS            [ shift and go to state 85 ]
  ! BY              [ shift and go to state 86 ]
  ! DIVIDED         [ shift and go to state 87 ]
  ! LESS            [ shift and go to state 88 ]
  ! MODUL           [ shift and go to state 89 ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 100

    (41) if_else -> RIF PARA . expression PARC LLAVEA instrucciones LLAVEC else
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 151
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 101

    (45) case_inst -> RSWITCH PARA . expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 152
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 102

    (50) while_ -> RWHILE PARA . expression PARC LLAVEA instrucciones LLAVEC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 153
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 103

    (51) for_ -> RFOR PARA . declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> RFOR PARA . declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type

    RVAR            shift and go to state 155

    declarevar                     shift and go to state 154

state 104

    (56) transfer -> RRETURN expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 56 (transfer -> RRETURN expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 105

    (57) createInterface -> RINTERFACE ID . LLAVEA attributesList LLAVEC

    LLAVEA          shift and go to state 156


state 106

    (65) declareFunction -> RFUNCTION ID . PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 157


state 107

    (114) logica -> NOT expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 114 (logica -> NOT expression .)
    AND             reduce using rule 114 (logica -> NOT expression .)
    OR              reduce using rule 114 (logica -> NOT expression .)
    PARC            reduce using rule 114 (logica -> NOT expression .)
    SEMICOLON       reduce using rule 114 (logica -> NOT expression .)
    BRACKETC        reduce using rule 114 (logica -> NOT expression .)
    COMMA           reduce using rule 114 (logica -> NOT expression .)
    DOUBLEDOT       reduce using rule 114 (logica -> NOT expression .)
    LLAVEC          reduce using rule 114 (logica -> NOT expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95

  ! PLUS            [ reduce using rule 114 (logica -> NOT expression .) ]
  ! BY              [ reduce using rule 114 (logica -> NOT expression .) ]
  ! DIVIDED         [ reduce using rule 114 (logica -> NOT expression .) ]
  ! LESS            [ reduce using rule 114 (logica -> NOT expression .) ]
  ! MODUL           [ reduce using rule 114 (logica -> NOT expression .) ]
  ! DEQUAL          [ reduce using rule 114 (logica -> NOT expression .) ]
  ! DIFERENT        [ reduce using rule 114 (logica -> NOT expression .) ]
  ! MINOR           [ reduce using rule 114 (logica -> NOT expression .) ]
  ! MINOREQUAL      [ reduce using rule 114 (logica -> NOT expression .) ]
  ! GREATER         [ reduce using rule 114 (logica -> NOT expression .) ]
  ! GREATEREQUAL    [ reduce using rule 114 (logica -> NOT expression .) ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 108

    (94) callInterface -> ROBJECT DOT . RKEYS PARA ID PARC
    (95) callInterface -> ROBJECT DOT . RVALUES PARA ID PARC

    RKEYS           shift and go to state 158
    RVALUES         shift and go to state 159


state 109

    (88) funcEmbebida -> FALSE DOT . RTOSTRING PARA PARC

    RTOSTRING       shift and go to state 160


state 110

    (85) funcEmbebida -> RPARSEINT PARA . expression PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 161
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 111

    (86) funcEmbebida -> RPARSEFLOAT PARA . expression PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 162
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 112

    (91) funcEmbebida -> RTYPEOF expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DIVIDED resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for MODUL resolved as shift
  ! shift/reduce conflict for DEQUAL resolved as shift
  ! shift/reduce conflict for DIFERENT resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MINOREQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    QUESTIONM       reduce using rule 91 (funcEmbebida -> RTYPEOF expression .)
    PARC            reduce using rule 91 (funcEmbebida -> RTYPEOF expression .)
    SEMICOLON       reduce using rule 91 (funcEmbebida -> RTYPEOF expression .)
    BRACKETC        reduce using rule 91 (funcEmbebida -> RTYPEOF expression .)
    COMMA           reduce using rule 91 (funcEmbebida -> RTYPEOF expression .)
    DOUBLEDOT       reduce using rule 91 (funcEmbebida -> RTYPEOF expression .)
    LLAVEC          reduce using rule 91 (funcEmbebida -> RTYPEOF expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97

  ! PLUS            [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! BY              [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! DIVIDED         [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! LESS            [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! MODUL           [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! DEQUAL          [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! DIFERENT        [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! MINOR           [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! MINOREQUAL      [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! GREATER         [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! GREATEREQUAL    [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! AND             [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]
  ! OR              [ reduce using rule 91 (funcEmbebida -> RTYPEOF expression .) ]


state 113

    (23) print -> CONSOLE DOT LOG . PARA expression_list PARC

    PARA            shift and go to state 163


state 114

    (92) expression_group -> PARA expression PARC .

    QUESTIONM       reduce using rule 92 (expression_group -> PARA expression PARC .)
    PLUS            reduce using rule 92 (expression_group -> PARA expression PARC .)
    BY              reduce using rule 92 (expression_group -> PARA expression PARC .)
    DIVIDED         reduce using rule 92 (expression_group -> PARA expression PARC .)
    LESS            reduce using rule 92 (expression_group -> PARA expression PARC .)
    MODUL           reduce using rule 92 (expression_group -> PARA expression PARC .)
    DEQUAL          reduce using rule 92 (expression_group -> PARA expression PARC .)
    DIFERENT        reduce using rule 92 (expression_group -> PARA expression PARC .)
    MINOR           reduce using rule 92 (expression_group -> PARA expression PARC .)
    MINOREQUAL      reduce using rule 92 (expression_group -> PARA expression PARC .)
    GREATER         reduce using rule 92 (expression_group -> PARA expression PARC .)
    GREATEREQUAL    reduce using rule 92 (expression_group -> PARA expression PARC .)
    AND             reduce using rule 92 (expression_group -> PARA expression PARC .)
    OR              reduce using rule 92 (expression_group -> PARA expression PARC .)
    PARC            reduce using rule 92 (expression_group -> PARA expression PARC .)
    SEMICOLON       reduce using rule 92 (expression_group -> PARA expression PARC .)
    BRACKETC        reduce using rule 92 (expression_group -> PARA expression PARC .)
    COMMA           reduce using rule 92 (expression_group -> PARA expression PARC .)
    DOUBLEDOT       reduce using rule 92 (expression_group -> PARA expression PARC .)
    LLAVEC          reduce using rule 92 (expression_group -> PARA expression PARC .)


state 115

    (99) id_ -> ID BRACKETO . expression BRACKETC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 164
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 116

    (118) arraysExpression -> ID DOT . RPOP PARA PARC
    (119) arraysExpression -> ID DOT . RINDEXOF PARA expression PARC
    (120) arraysExpression -> ID DOT . RJOIN PARA PARC
    (121) arraysExpression -> ID DOT . RLENGTH
    (93) callInterface -> ID DOT . ID
    (87) funcEmbebida -> ID DOT . RTOSTRING PARA PARC
    (89) funcEmbebida -> ID DOT . RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> ID DOT . RTOUPPERCASE PARA PARC

    RPOP            shift and go to state 125
    RINDEXOF        shift and go to state 126
    RJOIN           shift and go to state 127
    RLENGTH         shift and go to state 128
    ID              shift and go to state 165
    RTOSTRING       shift and go to state 129
    RTOLOWERCASE    shift and go to state 130
    RTOUPPERCASE    shift and go to state 131


state 117

    (24) declarevar -> RVAR ID DOUBLEDOT . type EQUAL expression
    (26) declarevar -> RVAR ID DOUBLEDOT . type
    (33) declareArray -> RVAR ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> RVAR ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> RVAR ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (60) declareInterface -> RVAR ID DOUBLEDOT . ID EQUAL LLAVEA interfaceContent LLAVEC
    (124) type -> . RNUMBER
    (125) type -> . RFLOAT
    (126) type -> . RSTRING
    (127) type -> . RBOOLEAN
    (128) type -> . type BRACKETO BRACKETC

    ID              shift and go to state 166
    RNUMBER         shift and go to state 168
    RFLOAT          shift and go to state 169
    RSTRING         shift and go to state 170
    RBOOLEAN        shift and go to state 171

    type                           shift and go to state 167

state 118

    (25) declarevar -> RVAR ID EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 172
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 119

    (30) assignVar -> ID EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 30 (assignVar -> ID EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 120

    (31) assignVar -> ID PLUS EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 173
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 121

    (32) assignVar -> ID LESS EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 174
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 122

    (39) assingArray -> ID BRACKETO expression . BRACKETC EQUAL expression
    (99) id_ -> ID BRACKETO expression . BRACKETC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    BRACKETC        shift and go to state 175
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 123

    (64) modifyInterface -> ID DOT ID . EQUAL expression
    (93) callInterface -> ID DOT ID .

    EQUAL           shift and go to state 176
    QUESTIONM       reduce using rule 93 (callInterface -> ID DOT ID .)
    PLUS            reduce using rule 93 (callInterface -> ID DOT ID .)
    BY              reduce using rule 93 (callInterface -> ID DOT ID .)
    DIVIDED         reduce using rule 93 (callInterface -> ID DOT ID .)
    LESS            reduce using rule 93 (callInterface -> ID DOT ID .)
    MODUL           reduce using rule 93 (callInterface -> ID DOT ID .)
    DEQUAL          reduce using rule 93 (callInterface -> ID DOT ID .)
    DIFERENT        reduce using rule 93 (callInterface -> ID DOT ID .)
    MINOR           reduce using rule 93 (callInterface -> ID DOT ID .)
    MINOREQUAL      reduce using rule 93 (callInterface -> ID DOT ID .)
    GREATER         reduce using rule 93 (callInterface -> ID DOT ID .)
    GREATEREQUAL    reduce using rule 93 (callInterface -> ID DOT ID .)
    AND             reduce using rule 93 (callInterface -> ID DOT ID .)
    OR              reduce using rule 93 (callInterface -> ID DOT ID .)


state 124

    (40) arrayFuncs -> ID DOT RPUSH . PARA expression PARC

    PARA            shift and go to state 177


state 125

    (118) arraysExpression -> ID DOT RPOP . PARA PARC

    PARA            shift and go to state 178


state 126

    (119) arraysExpression -> ID DOT RINDEXOF . PARA expression PARC

    PARA            shift and go to state 179


state 127

    (120) arraysExpression -> ID DOT RJOIN . PARA PARC

    PARA            shift and go to state 180


state 128

    (121) arraysExpression -> ID DOT RLENGTH .

    QUESTIONM       reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    PLUS            reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    BY              reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    DIVIDED         reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    LESS            reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    MODUL           reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    DEQUAL          reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    DIFERENT        reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    MINOR           reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    MINOREQUAL      reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    GREATER         reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    GREATEREQUAL    reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    AND             reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    OR              reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    PARC            reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    SEMICOLON       reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    BRACKETC        reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    COMMA           reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    DOUBLEDOT       reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)
    LLAVEC          reduce using rule 121 (arraysExpression -> ID DOT RLENGTH .)


state 129

    (87) funcEmbebida -> ID DOT RTOSTRING . PARA PARC

    PARA            shift and go to state 181


state 130

    (89) funcEmbebida -> ID DOT RTOLOWERCASE . PARA PARC

    PARA            shift and go to state 182


state 131

    (90) funcEmbebida -> ID DOT RTOUPPERCASE . PARA PARC

    PARA            shift and go to state 183


state 132

    (72) callFunction -> ID PARA expression_list . PARC
    (96) expression_list -> expression_list . COMMA expression

    PARC            shift and go to state 184
    COMMA           shift and go to state 185


state 133

    (73) callFunction -> ID PARA PARC .

    SEMICOLON       reduce using rule 73 (callFunction -> ID PARA PARC .)
    QUESTIONM       reduce using rule 73 (callFunction -> ID PARA PARC .)
    PLUS            reduce using rule 73 (callFunction -> ID PARA PARC .)
    BY              reduce using rule 73 (callFunction -> ID PARA PARC .)
    DIVIDED         reduce using rule 73 (callFunction -> ID PARA PARC .)
    LESS            reduce using rule 73 (callFunction -> ID PARA PARC .)
    MODUL           reduce using rule 73 (callFunction -> ID PARA PARC .)
    DEQUAL          reduce using rule 73 (callFunction -> ID PARA PARC .)
    DIFERENT        reduce using rule 73 (callFunction -> ID PARA PARC .)
    MINOR           reduce using rule 73 (callFunction -> ID PARA PARC .)
    MINOREQUAL      reduce using rule 73 (callFunction -> ID PARA PARC .)
    GREATER         reduce using rule 73 (callFunction -> ID PARA PARC .)
    GREATEREQUAL    reduce using rule 73 (callFunction -> ID PARA PARC .)
    AND             reduce using rule 73 (callFunction -> ID PARA PARC .)
    OR              reduce using rule 73 (callFunction -> ID PARA PARC .)
    PARC            reduce using rule 73 (callFunction -> ID PARA PARC .)
    BRACKETC        reduce using rule 73 (callFunction -> ID PARA PARC .)
    COMMA           reduce using rule 73 (callFunction -> ID PARA PARC .)
    DOUBLEDOT       reduce using rule 73 (callFunction -> ID PARA PARC .)
    LLAVEC          reduce using rule 73 (callFunction -> ID PARA PARC .)


state 134

    (97) expression_list -> expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            reduce using rule 97 (expression_list -> expression .)
    COMMA           reduce using rule 97 (expression_list -> expression .)
    BRACKETC        reduce using rule 97 (expression_list -> expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 135

    (49) ternario -> expression QUESTIONM expression . DOUBLEDOT expression
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    DOUBLEDOT       shift and go to state 186
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 136

    (100) aritmetica -> expression PLUS expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 100 (aritmetica -> expression PLUS expression .)
    PLUS            reduce using rule 100 (aritmetica -> expression PLUS expression .)
    LESS            reduce using rule 100 (aritmetica -> expression PLUS expression .)
    DEQUAL          reduce using rule 100 (aritmetica -> expression PLUS expression .)
    DIFERENT        reduce using rule 100 (aritmetica -> expression PLUS expression .)
    MINOR           reduce using rule 100 (aritmetica -> expression PLUS expression .)
    MINOREQUAL      reduce using rule 100 (aritmetica -> expression PLUS expression .)
    GREATER         reduce using rule 100 (aritmetica -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 100 (aritmetica -> expression PLUS expression .)
    AND             reduce using rule 100 (aritmetica -> expression PLUS expression .)
    OR              reduce using rule 100 (aritmetica -> expression PLUS expression .)
    PARC            reduce using rule 100 (aritmetica -> expression PLUS expression .)
    SEMICOLON       reduce using rule 100 (aritmetica -> expression PLUS expression .)
    BRACKETC        reduce using rule 100 (aritmetica -> expression PLUS expression .)
    COMMA           reduce using rule 100 (aritmetica -> expression PLUS expression .)
    DOUBLEDOT       reduce using rule 100 (aritmetica -> expression PLUS expression .)
    LLAVEC          reduce using rule 100 (aritmetica -> expression PLUS expression .)
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    MODUL           shift and go to state 89

  ! BY              [ reduce using rule 100 (aritmetica -> expression PLUS expression .) ]
  ! DIVIDED         [ reduce using rule 100 (aritmetica -> expression PLUS expression .) ]
  ! MODUL           [ reduce using rule 100 (aritmetica -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 85 ]
  ! LESS            [ shift and go to state 88 ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 137

    (101) aritmetica -> expression BY expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 101 (aritmetica -> expression BY expression .)
    PLUS            reduce using rule 101 (aritmetica -> expression BY expression .)
    BY              reduce using rule 101 (aritmetica -> expression BY expression .)
    DIVIDED         reduce using rule 101 (aritmetica -> expression BY expression .)
    LESS            reduce using rule 101 (aritmetica -> expression BY expression .)
    MODUL           reduce using rule 101 (aritmetica -> expression BY expression .)
    DEQUAL          reduce using rule 101 (aritmetica -> expression BY expression .)
    DIFERENT        reduce using rule 101 (aritmetica -> expression BY expression .)
    MINOR           reduce using rule 101 (aritmetica -> expression BY expression .)
    MINOREQUAL      reduce using rule 101 (aritmetica -> expression BY expression .)
    GREATER         reduce using rule 101 (aritmetica -> expression BY expression .)
    GREATEREQUAL    reduce using rule 101 (aritmetica -> expression BY expression .)
    AND             reduce using rule 101 (aritmetica -> expression BY expression .)
    OR              reduce using rule 101 (aritmetica -> expression BY expression .)
    PARC            reduce using rule 101 (aritmetica -> expression BY expression .)
    SEMICOLON       reduce using rule 101 (aritmetica -> expression BY expression .)
    BRACKETC        reduce using rule 101 (aritmetica -> expression BY expression .)
    COMMA           reduce using rule 101 (aritmetica -> expression BY expression .)
    DOUBLEDOT       reduce using rule 101 (aritmetica -> expression BY expression .)
    LLAVEC          reduce using rule 101 (aritmetica -> expression BY expression .)

  ! PLUS            [ shift and go to state 85 ]
  ! BY              [ shift and go to state 86 ]
  ! DIVIDED         [ shift and go to state 87 ]
  ! LESS            [ shift and go to state 88 ]
  ! MODUL           [ shift and go to state 89 ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 138

    (102) aritmetica -> expression DIVIDED expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    PLUS            reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    BY              reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    DIVIDED         reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    LESS            reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    MODUL           reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    DEQUAL          reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    DIFERENT        reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    MINOR           reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    MINOREQUAL      reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    GREATER         reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    GREATEREQUAL    reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    AND             reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    OR              reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    PARC            reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    SEMICOLON       reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    BRACKETC        reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    COMMA           reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    DOUBLEDOT       reduce using rule 102 (aritmetica -> expression DIVIDED expression .)
    LLAVEC          reduce using rule 102 (aritmetica -> expression DIVIDED expression .)

  ! PLUS            [ shift and go to state 85 ]
  ! BY              [ shift and go to state 86 ]
  ! DIVIDED         [ shift and go to state 87 ]
  ! LESS            [ shift and go to state 88 ]
  ! MODUL           [ shift and go to state 89 ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 139

    (103) aritmetica -> expression LESS expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 103 (aritmetica -> expression LESS expression .)
    PLUS            reduce using rule 103 (aritmetica -> expression LESS expression .)
    LESS            reduce using rule 103 (aritmetica -> expression LESS expression .)
    DEQUAL          reduce using rule 103 (aritmetica -> expression LESS expression .)
    DIFERENT        reduce using rule 103 (aritmetica -> expression LESS expression .)
    MINOR           reduce using rule 103 (aritmetica -> expression LESS expression .)
    MINOREQUAL      reduce using rule 103 (aritmetica -> expression LESS expression .)
    GREATER         reduce using rule 103 (aritmetica -> expression LESS expression .)
    GREATEREQUAL    reduce using rule 103 (aritmetica -> expression LESS expression .)
    AND             reduce using rule 103 (aritmetica -> expression LESS expression .)
    OR              reduce using rule 103 (aritmetica -> expression LESS expression .)
    PARC            reduce using rule 103 (aritmetica -> expression LESS expression .)
    SEMICOLON       reduce using rule 103 (aritmetica -> expression LESS expression .)
    BRACKETC        reduce using rule 103 (aritmetica -> expression LESS expression .)
    COMMA           reduce using rule 103 (aritmetica -> expression LESS expression .)
    DOUBLEDOT       reduce using rule 103 (aritmetica -> expression LESS expression .)
    LLAVEC          reduce using rule 103 (aritmetica -> expression LESS expression .)
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    MODUL           shift and go to state 89

  ! BY              [ reduce using rule 103 (aritmetica -> expression LESS expression .) ]
  ! DIVIDED         [ reduce using rule 103 (aritmetica -> expression LESS expression .) ]
  ! MODUL           [ reduce using rule 103 (aritmetica -> expression LESS expression .) ]
  ! PLUS            [ shift and go to state 85 ]
  ! LESS            [ shift and go to state 88 ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 140

    (104) aritmetica -> expression MODUL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 104 (aritmetica -> expression MODUL expression .)
    PLUS            reduce using rule 104 (aritmetica -> expression MODUL expression .)
    BY              reduce using rule 104 (aritmetica -> expression MODUL expression .)
    DIVIDED         reduce using rule 104 (aritmetica -> expression MODUL expression .)
    LESS            reduce using rule 104 (aritmetica -> expression MODUL expression .)
    MODUL           reduce using rule 104 (aritmetica -> expression MODUL expression .)
    DEQUAL          reduce using rule 104 (aritmetica -> expression MODUL expression .)
    DIFERENT        reduce using rule 104 (aritmetica -> expression MODUL expression .)
    MINOR           reduce using rule 104 (aritmetica -> expression MODUL expression .)
    MINOREQUAL      reduce using rule 104 (aritmetica -> expression MODUL expression .)
    GREATER         reduce using rule 104 (aritmetica -> expression MODUL expression .)
    GREATEREQUAL    reduce using rule 104 (aritmetica -> expression MODUL expression .)
    AND             reduce using rule 104 (aritmetica -> expression MODUL expression .)
    OR              reduce using rule 104 (aritmetica -> expression MODUL expression .)
    PARC            reduce using rule 104 (aritmetica -> expression MODUL expression .)
    SEMICOLON       reduce using rule 104 (aritmetica -> expression MODUL expression .)
    BRACKETC        reduce using rule 104 (aritmetica -> expression MODUL expression .)
    COMMA           reduce using rule 104 (aritmetica -> expression MODUL expression .)
    DOUBLEDOT       reduce using rule 104 (aritmetica -> expression MODUL expression .)
    LLAVEC          reduce using rule 104 (aritmetica -> expression MODUL expression .)

  ! PLUS            [ shift and go to state 85 ]
  ! BY              [ shift and go to state 86 ]
  ! DIVIDED         [ shift and go to state 87 ]
  ! LESS            [ shift and go to state 88 ]
  ! MODUL           [ shift and go to state 89 ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 141

    (106) relacional -> expression DEQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 106 (relacional -> expression DEQUAL expression .)
    DEQUAL          reduce using rule 106 (relacional -> expression DEQUAL expression .)
    DIFERENT        reduce using rule 106 (relacional -> expression DEQUAL expression .)
    MINOR           reduce using rule 106 (relacional -> expression DEQUAL expression .)
    MINOREQUAL      reduce using rule 106 (relacional -> expression DEQUAL expression .)
    GREATER         reduce using rule 106 (relacional -> expression DEQUAL expression .)
    GREATEREQUAL    reduce using rule 106 (relacional -> expression DEQUAL expression .)
    AND             reduce using rule 106 (relacional -> expression DEQUAL expression .)
    OR              reduce using rule 106 (relacional -> expression DEQUAL expression .)
    PARC            reduce using rule 106 (relacional -> expression DEQUAL expression .)
    SEMICOLON       reduce using rule 106 (relacional -> expression DEQUAL expression .)
    BRACKETC        reduce using rule 106 (relacional -> expression DEQUAL expression .)
    COMMA           reduce using rule 106 (relacional -> expression DEQUAL expression .)
    DOUBLEDOT       reduce using rule 106 (relacional -> expression DEQUAL expression .)
    LLAVEC          reduce using rule 106 (relacional -> expression DEQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89

  ! PLUS            [ reduce using rule 106 (relacional -> expression DEQUAL expression .) ]
  ! BY              [ reduce using rule 106 (relacional -> expression DEQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 106 (relacional -> expression DEQUAL expression .) ]
  ! LESS            [ reduce using rule 106 (relacional -> expression DEQUAL expression .) ]
  ! MODUL           [ reduce using rule 106 (relacional -> expression DEQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 142

    (107) relacional -> expression DIFERENT expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 107 (relacional -> expression DIFERENT expression .)
    DEQUAL          reduce using rule 107 (relacional -> expression DIFERENT expression .)
    DIFERENT        reduce using rule 107 (relacional -> expression DIFERENT expression .)
    MINOR           reduce using rule 107 (relacional -> expression DIFERENT expression .)
    MINOREQUAL      reduce using rule 107 (relacional -> expression DIFERENT expression .)
    GREATER         reduce using rule 107 (relacional -> expression DIFERENT expression .)
    GREATEREQUAL    reduce using rule 107 (relacional -> expression DIFERENT expression .)
    AND             reduce using rule 107 (relacional -> expression DIFERENT expression .)
    OR              reduce using rule 107 (relacional -> expression DIFERENT expression .)
    PARC            reduce using rule 107 (relacional -> expression DIFERENT expression .)
    SEMICOLON       reduce using rule 107 (relacional -> expression DIFERENT expression .)
    BRACKETC        reduce using rule 107 (relacional -> expression DIFERENT expression .)
    COMMA           reduce using rule 107 (relacional -> expression DIFERENT expression .)
    DOUBLEDOT       reduce using rule 107 (relacional -> expression DIFERENT expression .)
    LLAVEC          reduce using rule 107 (relacional -> expression DIFERENT expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89

  ! PLUS            [ reduce using rule 107 (relacional -> expression DIFERENT expression .) ]
  ! BY              [ reduce using rule 107 (relacional -> expression DIFERENT expression .) ]
  ! DIVIDED         [ reduce using rule 107 (relacional -> expression DIFERENT expression .) ]
  ! LESS            [ reduce using rule 107 (relacional -> expression DIFERENT expression .) ]
  ! MODUL           [ reduce using rule 107 (relacional -> expression DIFERENT expression .) ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 143

    (108) relacional -> expression MINOR expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 108 (relacional -> expression MINOR expression .)
    DEQUAL          reduce using rule 108 (relacional -> expression MINOR expression .)
    DIFERENT        reduce using rule 108 (relacional -> expression MINOR expression .)
    MINOR           reduce using rule 108 (relacional -> expression MINOR expression .)
    MINOREQUAL      reduce using rule 108 (relacional -> expression MINOR expression .)
    GREATER         reduce using rule 108 (relacional -> expression MINOR expression .)
    GREATEREQUAL    reduce using rule 108 (relacional -> expression MINOR expression .)
    AND             reduce using rule 108 (relacional -> expression MINOR expression .)
    OR              reduce using rule 108 (relacional -> expression MINOR expression .)
    PARC            reduce using rule 108 (relacional -> expression MINOR expression .)
    SEMICOLON       reduce using rule 108 (relacional -> expression MINOR expression .)
    BRACKETC        reduce using rule 108 (relacional -> expression MINOR expression .)
    COMMA           reduce using rule 108 (relacional -> expression MINOR expression .)
    DOUBLEDOT       reduce using rule 108 (relacional -> expression MINOR expression .)
    LLAVEC          reduce using rule 108 (relacional -> expression MINOR expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89

  ! PLUS            [ reduce using rule 108 (relacional -> expression MINOR expression .) ]
  ! BY              [ reduce using rule 108 (relacional -> expression MINOR expression .) ]
  ! DIVIDED         [ reduce using rule 108 (relacional -> expression MINOR expression .) ]
  ! LESS            [ reduce using rule 108 (relacional -> expression MINOR expression .) ]
  ! MODUL           [ reduce using rule 108 (relacional -> expression MINOR expression .) ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 144

    (109) relacional -> expression MINOREQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    DEQUAL          reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    DIFERENT        reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    MINOR           reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    MINOREQUAL      reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    GREATER         reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    GREATEREQUAL    reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    AND             reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    OR              reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    PARC            reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    SEMICOLON       reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    BRACKETC        reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    COMMA           reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    DOUBLEDOT       reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    LLAVEC          reduce using rule 109 (relacional -> expression MINOREQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89

  ! PLUS            [ reduce using rule 109 (relacional -> expression MINOREQUAL expression .) ]
  ! BY              [ reduce using rule 109 (relacional -> expression MINOREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 109 (relacional -> expression MINOREQUAL expression .) ]
  ! LESS            [ reduce using rule 109 (relacional -> expression MINOREQUAL expression .) ]
  ! MODUL           [ reduce using rule 109 (relacional -> expression MINOREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 145

    (110) relacional -> expression GREATER expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 110 (relacional -> expression GREATER expression .)
    DEQUAL          reduce using rule 110 (relacional -> expression GREATER expression .)
    DIFERENT        reduce using rule 110 (relacional -> expression GREATER expression .)
    MINOR           reduce using rule 110 (relacional -> expression GREATER expression .)
    MINOREQUAL      reduce using rule 110 (relacional -> expression GREATER expression .)
    GREATER         reduce using rule 110 (relacional -> expression GREATER expression .)
    GREATEREQUAL    reduce using rule 110 (relacional -> expression GREATER expression .)
    AND             reduce using rule 110 (relacional -> expression GREATER expression .)
    OR              reduce using rule 110 (relacional -> expression GREATER expression .)
    PARC            reduce using rule 110 (relacional -> expression GREATER expression .)
    SEMICOLON       reduce using rule 110 (relacional -> expression GREATER expression .)
    BRACKETC        reduce using rule 110 (relacional -> expression GREATER expression .)
    COMMA           reduce using rule 110 (relacional -> expression GREATER expression .)
    DOUBLEDOT       reduce using rule 110 (relacional -> expression GREATER expression .)
    LLAVEC          reduce using rule 110 (relacional -> expression GREATER expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89

  ! PLUS            [ reduce using rule 110 (relacional -> expression GREATER expression .) ]
  ! BY              [ reduce using rule 110 (relacional -> expression GREATER expression .) ]
  ! DIVIDED         [ reduce using rule 110 (relacional -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 110 (relacional -> expression GREATER expression .) ]
  ! MODUL           [ reduce using rule 110 (relacional -> expression GREATER expression .) ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 146

    (111) relacional -> expression GREATEREQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    DEQUAL          reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    DIFERENT        reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    MINOR           reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    MINOREQUAL      reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    GREATER         reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    AND             reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    OR              reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    PARC            reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    BRACKETC        reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    COMMA           reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    DOUBLEDOT       reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    LLAVEC          reduce using rule 111 (relacional -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89

  ! PLUS            [ reduce using rule 111 (relacional -> expression GREATEREQUAL expression .) ]
  ! BY              [ reduce using rule 111 (relacional -> expression GREATEREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 111 (relacional -> expression GREATEREQUAL expression .) ]
  ! LESS            [ reduce using rule 111 (relacional -> expression GREATEREQUAL expression .) ]
  ! MODUL           [ reduce using rule 111 (relacional -> expression GREATEREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 90 ]
  ! DIFERENT        [ shift and go to state 91 ]
  ! MINOR           [ shift and go to state 92 ]
  ! MINOREQUAL      [ shift and go to state 93 ]
  ! GREATER         [ shift and go to state 94 ]
  ! GREATEREQUAL    [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 147

    (112) logica -> expression AND expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 112 (logica -> expression AND expression .)
    AND             reduce using rule 112 (logica -> expression AND expression .)
    OR              reduce using rule 112 (logica -> expression AND expression .)
    PARC            reduce using rule 112 (logica -> expression AND expression .)
    SEMICOLON       reduce using rule 112 (logica -> expression AND expression .)
    BRACKETC        reduce using rule 112 (logica -> expression AND expression .)
    COMMA           reduce using rule 112 (logica -> expression AND expression .)
    DOUBLEDOT       reduce using rule 112 (logica -> expression AND expression .)
    LLAVEC          reduce using rule 112 (logica -> expression AND expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95

  ! PLUS            [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! BY              [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! DIVIDED         [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! LESS            [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! MODUL           [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! DEQUAL          [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! DIFERENT        [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! MINOR           [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! MINOREQUAL      [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! GREATEREQUAL    [ reduce using rule 112 (logica -> expression AND expression .) ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 148

    (113) logica -> expression OR expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    QUESTIONM       reduce using rule 113 (logica -> expression OR expression .)
    OR              reduce using rule 113 (logica -> expression OR expression .)
    PARC            reduce using rule 113 (logica -> expression OR expression .)
    SEMICOLON       reduce using rule 113 (logica -> expression OR expression .)
    BRACKETC        reduce using rule 113 (logica -> expression OR expression .)
    COMMA           reduce using rule 113 (logica -> expression OR expression .)
    DOUBLEDOT       reduce using rule 113 (logica -> expression OR expression .)
    LLAVEC          reduce using rule 113 (logica -> expression OR expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96

  ! PLUS            [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! BY              [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! DIVIDED         [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! LESS            [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! MODUL           [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! DEQUAL          [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! DIFERENT        [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! MINOR           [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! MINOREQUAL      [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! GREATEREQUAL    [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! AND             [ reduce using rule 113 (logica -> expression OR expression .) ]
  ! OR              [ shift and go to state 97 ]


state 149

    (27) declareConst -> RCONST ID DOUBLEDOT . type EQUAL expression
    (29) declareConst -> RCONST ID DOUBLEDOT . type
    (36) declareArrayConst -> RCONST ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> RCONST ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> RCONST ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (61) declareInterface -> RCONST ID DOUBLEDOT . ID EQUAL LLAVEA interfaceContent LLAVEC
    (124) type -> . RNUMBER
    (125) type -> . RFLOAT
    (126) type -> . RSTRING
    (127) type -> . RBOOLEAN
    (128) type -> . type BRACKETO BRACKETC

    ID              shift and go to state 187
    RNUMBER         shift and go to state 168
    RFLOAT          shift and go to state 169
    RSTRING         shift and go to state 170
    RBOOLEAN        shift and go to state 171

    type                           shift and go to state 188

state 150

    (28) declareConst -> RCONST ID EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 189
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 151

    (41) if_else -> RIF PARA expression . PARC LLAVEA instrucciones LLAVEC else
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            shift and go to state 190
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 152

    (45) case_inst -> RSWITCH PARA expression . PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            shift and go to state 191
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 153

    (50) while_ -> RWHILE PARA expression . PARC LLAVEA instrucciones LLAVEC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            shift and go to state 192
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 154

    (51) for_ -> RFOR PARA declarevar . SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> RFOR PARA declarevar . SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    SEMICOLON       shift and go to state 193


state 155

    (24) declarevar -> RVAR . ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> RVAR . ID EQUAL expression
    (26) declarevar -> RVAR . ID DOUBLEDOT type

    ID              shift and go to state 194


state 156

    (57) createInterface -> RINTERFACE ID LLAVEA . attributesList LLAVEC
    (58) attributesList -> . attributesList ID DOUBLEDOT type SEMICOLON
    (59) attributesList -> . ID DOUBLEDOT type SEMICOLON

    ID              shift and go to state 195

    attributesList                 shift and go to state 196

state 157

    (65) declareFunction -> RFUNCTION ID PARA . funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (66) funcparams -> . funcparams COMMA param
    (67) funcparams -> . param
    (68) funcparams -> .
    (69) param -> . ID DOUBLEDOT type

    PARC            reduce using rule 68 (funcparams -> .)
    COMMA           reduce using rule 68 (funcparams -> .)
    ID              shift and go to state 197

    funcparams                     shift and go to state 198
    param                          shift and go to state 199

state 158

    (94) callInterface -> ROBJECT DOT RKEYS . PARA ID PARC

    PARA            shift and go to state 200


state 159

    (95) callInterface -> ROBJECT DOT RVALUES . PARA ID PARC

    PARA            shift and go to state 201


state 160

    (88) funcEmbebida -> FALSE DOT RTOSTRING . PARA PARC

    PARA            shift and go to state 202


state 161

    (85) funcEmbebida -> RPARSEINT PARA expression . PARC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            shift and go to state 203
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 162

    (86) funcEmbebida -> RPARSEFLOAT PARA expression . PARC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            shift and go to state 204
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 163

    (23) print -> CONSOLE DOT LOG PARA . expression_list PARC
    (96) expression_list -> . expression_list COMMA expression
    (97) expression_list -> . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression_list                shift and go to state 205
    expression                     shift and go to state 134
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 164

    (99) id_ -> ID BRACKETO expression . BRACKETC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    BRACKETC        shift and go to state 206
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 165

    (93) callInterface -> ID DOT ID .

    PARC            reduce using rule 93 (callInterface -> ID DOT ID .)
    PLUS            reduce using rule 93 (callInterface -> ID DOT ID .)
    BY              reduce using rule 93 (callInterface -> ID DOT ID .)
    DIVIDED         reduce using rule 93 (callInterface -> ID DOT ID .)
    LESS            reduce using rule 93 (callInterface -> ID DOT ID .)
    MODUL           reduce using rule 93 (callInterface -> ID DOT ID .)
    DEQUAL          reduce using rule 93 (callInterface -> ID DOT ID .)
    DIFERENT        reduce using rule 93 (callInterface -> ID DOT ID .)
    MINOR           reduce using rule 93 (callInterface -> ID DOT ID .)
    MINOREQUAL      reduce using rule 93 (callInterface -> ID DOT ID .)
    GREATER         reduce using rule 93 (callInterface -> ID DOT ID .)
    GREATEREQUAL    reduce using rule 93 (callInterface -> ID DOT ID .)
    AND             reduce using rule 93 (callInterface -> ID DOT ID .)
    OR              reduce using rule 93 (callInterface -> ID DOT ID .)
    QUESTIONM       reduce using rule 93 (callInterface -> ID DOT ID .)
    SEMICOLON       reduce using rule 93 (callInterface -> ID DOT ID .)
    BRACKETC        reduce using rule 93 (callInterface -> ID DOT ID .)
    COMMA           reduce using rule 93 (callInterface -> ID DOT ID .)
    DOUBLEDOT       reduce using rule 93 (callInterface -> ID DOT ID .)
    LLAVEC          reduce using rule 93 (callInterface -> ID DOT ID .)


state 166

    (60) declareInterface -> RVAR ID DOUBLEDOT ID . EQUAL LLAVEA interfaceContent LLAVEC

    EQUAL           shift and go to state 207


state 167

    (24) declarevar -> RVAR ID DOUBLEDOT type . EQUAL expression
    (26) declarevar -> RVAR ID DOUBLEDOT type .
    (33) declareArray -> RVAR ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> RVAR ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> RVAR ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (128) type -> type . BRACKETO BRACKETC

    EQUAL           shift and go to state 208
    SEMICOLON       reduce using rule 26 (declarevar -> RVAR ID DOUBLEDOT type .)
    BRACKETO        shift and go to state 209


state 168

    (124) type -> RNUMBER .

    EQUAL           reduce using rule 124 (type -> RNUMBER .)
    BRACKETO        reduce using rule 124 (type -> RNUMBER .)
    SEMICOLON       reduce using rule 124 (type -> RNUMBER .)
    PARC            reduce using rule 124 (type -> RNUMBER .)
    COMMA           reduce using rule 124 (type -> RNUMBER .)
    LLAVEA          reduce using rule 124 (type -> RNUMBER .)


state 169

    (125) type -> RFLOAT .

    EQUAL           reduce using rule 125 (type -> RFLOAT .)
    BRACKETO        reduce using rule 125 (type -> RFLOAT .)
    SEMICOLON       reduce using rule 125 (type -> RFLOAT .)
    PARC            reduce using rule 125 (type -> RFLOAT .)
    COMMA           reduce using rule 125 (type -> RFLOAT .)
    LLAVEA          reduce using rule 125 (type -> RFLOAT .)


state 170

    (126) type -> RSTRING .

    EQUAL           reduce using rule 126 (type -> RSTRING .)
    BRACKETO        reduce using rule 126 (type -> RSTRING .)
    SEMICOLON       reduce using rule 126 (type -> RSTRING .)
    PARC            reduce using rule 126 (type -> RSTRING .)
    COMMA           reduce using rule 126 (type -> RSTRING .)
    LLAVEA          reduce using rule 126 (type -> RSTRING .)


state 171

    (127) type -> RBOOLEAN .

    EQUAL           reduce using rule 127 (type -> RBOOLEAN .)
    BRACKETO        reduce using rule 127 (type -> RBOOLEAN .)
    SEMICOLON       reduce using rule 127 (type -> RBOOLEAN .)
    PARC            reduce using rule 127 (type -> RBOOLEAN .)
    COMMA           reduce using rule 127 (type -> RBOOLEAN .)
    LLAVEA          reduce using rule 127 (type -> RBOOLEAN .)


state 172

    (25) declarevar -> RVAR ID EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 25 (declarevar -> RVAR ID EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 173

    (31) assignVar -> ID PLUS EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 31 (assignVar -> ID PLUS EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 174

    (32) assignVar -> ID LESS EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 32 (assignVar -> ID LESS EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 175

    (39) assingArray -> ID BRACKETO expression BRACKETC . EQUAL expression
    (99) id_ -> ID BRACKETO expression BRACKETC .

    EQUAL           shift and go to state 210
    QUESTIONM       reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    PLUS            reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    BY              reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    DIVIDED         reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    LESS            reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    MODUL           reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    DEQUAL          reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    DIFERENT        reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOR           reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOREQUAL      reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATER         reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATEREQUAL    reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    AND             reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    OR              reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)


state 176

    (64) modifyInterface -> ID DOT ID EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 211
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 177

    (40) arrayFuncs -> ID DOT RPUSH PARA . expression PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 212
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 178

    (118) arraysExpression -> ID DOT RPOP PARA . PARC

    PARC            shift and go to state 213


state 179

    (119) arraysExpression -> ID DOT RINDEXOF PARA . expression PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 214
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 180

    (120) arraysExpression -> ID DOT RJOIN PARA . PARC

    PARC            shift and go to state 215


state 181

    (87) funcEmbebida -> ID DOT RTOSTRING PARA . PARC

    PARC            shift and go to state 216


state 182

    (89) funcEmbebida -> ID DOT RTOLOWERCASE PARA . PARC

    PARC            shift and go to state 217


state 183

    (90) funcEmbebida -> ID DOT RTOUPPERCASE PARA . PARC

    PARC            shift and go to state 218


state 184

    (72) callFunction -> ID PARA expression_list PARC .

    SEMICOLON       reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    QUESTIONM       reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    PLUS            reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    BY              reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    DIVIDED         reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    LESS            reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    MODUL           reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    DEQUAL          reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    DIFERENT        reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    MINOR           reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    MINOREQUAL      reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    GREATER         reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    GREATEREQUAL    reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    AND             reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    OR              reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    PARC            reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    BRACKETC        reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    COMMA           reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    DOUBLEDOT       reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)
    LLAVEC          reduce using rule 72 (callFunction -> ID PARA expression_list PARC .)


state 185

    (96) expression_list -> expression_list COMMA . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 219
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 186

    (49) ternario -> expression QUESTIONM expression DOUBLEDOT . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 220
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 187

    (61) declareInterface -> RCONST ID DOUBLEDOT ID . EQUAL LLAVEA interfaceContent LLAVEC

    EQUAL           shift and go to state 221


state 188

    (27) declareConst -> RCONST ID DOUBLEDOT type . EQUAL expression
    (29) declareConst -> RCONST ID DOUBLEDOT type .
    (36) declareArrayConst -> RCONST ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> RCONST ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> RCONST ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (128) type -> type . BRACKETO BRACKETC

    EQUAL           shift and go to state 222
    SEMICOLON       reduce using rule 29 (declareConst -> RCONST ID DOUBLEDOT type .)
    BRACKETO        shift and go to state 223


state 189

    (28) declareConst -> RCONST ID EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 28 (declareConst -> RCONST ID EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 190

    (41) if_else -> RIF PARA expression PARC . LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 224


state 191

    (45) case_inst -> RSWITCH PARA expression PARC . LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC

    LLAVEA          shift and go to state 225


state 192

    (50) while_ -> RWHILE PARA expression PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 226


state 193

    (51) for_ -> RFOR PARA declarevar SEMICOLON . relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> RFOR PARA declarevar SEMICOLON . relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    relacional                     shift and go to state 227
    id_                            shift and go to state 35
    expression                     shift and go to state 228
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 194

    (24) declarevar -> RVAR ID . DOUBLEDOT type EQUAL expression
    (25) declarevar -> RVAR ID . EQUAL expression
    (26) declarevar -> RVAR ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 229
    EQUAL           shift and go to state 118


state 195

    (59) attributesList -> ID . DOUBLEDOT type SEMICOLON

    DOUBLEDOT       shift and go to state 230


state 196

    (57) createInterface -> RINTERFACE ID LLAVEA attributesList . LLAVEC
    (58) attributesList -> attributesList . ID DOUBLEDOT type SEMICOLON

    LLAVEC          shift and go to state 232
    ID              shift and go to state 231


state 197

    (69) param -> ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 233


state 198

    (65) declareFunction -> RFUNCTION ID PARA funcparams . PARC returntype LLAVEA instrucciones LLAVEC
    (66) funcparams -> funcparams . COMMA param

    PARC            shift and go to state 234
    COMMA           shift and go to state 235


state 199

    (67) funcparams -> param .

    PARC            reduce using rule 67 (funcparams -> param .)
    COMMA           reduce using rule 67 (funcparams -> param .)


state 200

    (94) callInterface -> ROBJECT DOT RKEYS PARA . ID PARC

    ID              shift and go to state 236


state 201

    (95) callInterface -> ROBJECT DOT RVALUES PARA . ID PARC

    ID              shift and go to state 237


state 202

    (88) funcEmbebida -> FALSE DOT RTOSTRING PARA . PARC

    PARC            shift and go to state 238


state 203

    (85) funcEmbebida -> RPARSEINT PARA expression PARC .

    QUESTIONM       reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    PLUS            reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    BY              reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    DIVIDED         reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    LESS            reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    MODUL           reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    DEQUAL          reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    DIFERENT        reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    MINOR           reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    MINOREQUAL      reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    GREATER         reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    GREATEREQUAL    reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    AND             reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    OR              reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    PARC            reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    SEMICOLON       reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    BRACKETC        reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    COMMA           reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    DOUBLEDOT       reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)
    LLAVEC          reduce using rule 85 (funcEmbebida -> RPARSEINT PARA expression PARC .)


state 204

    (86) funcEmbebida -> RPARSEFLOAT PARA expression PARC .

    QUESTIONM       reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    PLUS            reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    BY              reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    DIVIDED         reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    LESS            reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    MODUL           reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    DEQUAL          reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    DIFERENT        reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    MINOR           reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    MINOREQUAL      reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    GREATER         reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    GREATEREQUAL    reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    AND             reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    OR              reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    PARC            reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    SEMICOLON       reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    BRACKETC        reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    COMMA           reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    DOUBLEDOT       reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)
    LLAVEC          reduce using rule 86 (funcEmbebida -> RPARSEFLOAT PARA expression PARC .)


state 205

    (23) print -> CONSOLE DOT LOG PARA expression_list . PARC
    (96) expression_list -> expression_list . COMMA expression

    PARC            shift and go to state 239
    COMMA           shift and go to state 185


state 206

    (99) id_ -> ID BRACKETO expression BRACKETC .

    PARC            reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    PLUS            reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    BY              reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    DIVIDED         reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    LESS            reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    MODUL           reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    DEQUAL          reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    DIFERENT        reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOR           reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOREQUAL      reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATER         reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATEREQUAL    reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    AND             reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    OR              reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    QUESTIONM       reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    SEMICOLON       reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    BRACKETC        reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    COMMA           reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    DOUBLEDOT       reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)
    LLAVEC          reduce using rule 99 (id_ -> ID BRACKETO expression BRACKETC .)


state 207

    (60) declareInterface -> RVAR ID DOUBLEDOT ID EQUAL . LLAVEA interfaceContent LLAVEC

    LLAVEA          shift and go to state 240


state 208

    (24) declarevar -> RVAR ID DOUBLEDOT type EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 241
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 209

    (33) declareArray -> RVAR ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> RVAR ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL expression
    (35) declareArray -> RVAR ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL BRACKETO BRACKETC
    (128) type -> type BRACKETO . BRACKETC

    BRACKETC        shift and go to state 242


state 210

    (39) assingArray -> ID BRACKETO expression BRACKETC EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 243
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 211

    (64) modifyInterface -> ID DOT ID EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 64 (modifyInterface -> ID DOT ID EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 212

    (40) arrayFuncs -> ID DOT RPUSH PARA expression . PARC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            shift and go to state 244
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 213

    (118) arraysExpression -> ID DOT RPOP PARA PARC .

    QUESTIONM       reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    PLUS            reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    BY              reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIVIDED         reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    LESS            reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MODUL           reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DEQUAL          reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIFERENT        reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOR           reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOREQUAL      reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATER         reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATEREQUAL    reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    AND             reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    OR              reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    PARC            reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    SEMICOLON       reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    BRACKETC        reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    COMMA           reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DOUBLEDOT       reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)
    LLAVEC          reduce using rule 118 (arraysExpression -> ID DOT RPOP PARA PARC .)


state 214

    (119) arraysExpression -> ID DOT RINDEXOF PARA expression . PARC
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            shift and go to state 245
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 215

    (120) arraysExpression -> ID DOT RJOIN PARA PARC .

    QUESTIONM       reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    PLUS            reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    BY              reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DIVIDED         reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    LESS            reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MODUL           reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DEQUAL          reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DIFERENT        reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MINOR           reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MINOREQUAL      reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    GREATER         reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    GREATEREQUAL    reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    AND             reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    OR              reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    PARC            reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    SEMICOLON       reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    BRACKETC        reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    COMMA           reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DOUBLEDOT       reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    LLAVEC          reduce using rule 120 (arraysExpression -> ID DOT RJOIN PARA PARC .)


state 216

    (87) funcEmbebida -> ID DOT RTOSTRING PARA PARC .

    QUESTIONM       reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    PLUS            reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    BY              reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    DIVIDED         reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    LESS            reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    MODUL           reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    DEQUAL          reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    DIFERENT        reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    MINOR           reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    MINOREQUAL      reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    GREATER         reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    GREATEREQUAL    reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    AND             reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    OR              reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    PARC            reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    SEMICOLON       reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    BRACKETC        reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    COMMA           reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    DOUBLEDOT       reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)
    LLAVEC          reduce using rule 87 (funcEmbebida -> ID DOT RTOSTRING PARA PARC .)


state 217

    (89) funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .

    QUESTIONM       reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    PLUS            reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    BY              reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    DIVIDED         reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    LESS            reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    MODUL           reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    DEQUAL          reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    DIFERENT        reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    MINOR           reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    MINOREQUAL      reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    GREATER         reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    GREATEREQUAL    reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    AND             reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    OR              reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    PARC            reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    SEMICOLON       reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    BRACKETC        reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    COMMA           reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    DOUBLEDOT       reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)
    LLAVEC          reduce using rule 89 (funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC .)


state 218

    (90) funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .

    QUESTIONM       reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    PLUS            reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    BY              reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    DIVIDED         reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    LESS            reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    MODUL           reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    DEQUAL          reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    DIFERENT        reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    MINOR           reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    MINOREQUAL      reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    GREATER         reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    GREATEREQUAL    reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    AND             reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    OR              reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    PARC            reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    SEMICOLON       reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    BRACKETC        reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    COMMA           reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    DOUBLEDOT       reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)
    LLAVEC          reduce using rule 90 (funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC .)


state 219

    (96) expression_list -> expression_list COMMA expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    PARC            reduce using rule 96 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 96 (expression_list -> expression_list COMMA expression .)
    BRACKETC        reduce using rule 96 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 220

    (49) ternario -> expression QUESTIONM expression DOUBLEDOT expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 49 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 221

    (61) declareInterface -> RCONST ID DOUBLEDOT ID EQUAL . LLAVEA interfaceContent LLAVEC

    LLAVEA          shift and go to state 246


state 222

    (27) declareConst -> RCONST ID DOUBLEDOT type EQUAL . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 247
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 223

    (36) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL expression
    (38) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL BRACKETO BRACKETC
    (128) type -> type BRACKETO . BRACKETC

    BRACKETC        shift and go to state 248


state 224

    (41) if_else -> RIF PARA expression PARC LLAVEA . instrucciones LLAVEC else
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 27
    instrucciones                  shift and go to state 249
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 225

    (45) case_inst -> RSWITCH PARA expression PARC LLAVEA . cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (46) cases -> . cases case
    (47) cases -> . case
    (48) case -> . RCASE expression DOUBLEDOT instrucciones

    RCASE           shift and go to state 252

    cases                          shift and go to state 250
    case                           shift and go to state 251

state 226

    (50) while_ -> RWHILE PARA expression PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 27
    instrucciones                  shift and go to state 253
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 227

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional . SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional . SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (76) expression -> relacional .

    SEMICOLON       shift and go to state 254
    DEQUAL          reduce using rule 76 (expression -> relacional .)
    DIFERENT        reduce using rule 76 (expression -> relacional .)
    MINOR           reduce using rule 76 (expression -> relacional .)
    MINOREQUAL      reduce using rule 76 (expression -> relacional .)
    GREATER         reduce using rule 76 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 76 (expression -> relacional .)
    PLUS            reduce using rule 76 (expression -> relacional .)
    BY              reduce using rule 76 (expression -> relacional .)
    DIVIDED         reduce using rule 76 (expression -> relacional .)
    LESS            reduce using rule 76 (expression -> relacional .)
    MODUL           reduce using rule 76 (expression -> relacional .)
    AND             reduce using rule 76 (expression -> relacional .)
    OR              reduce using rule 76 (expression -> relacional .)


state 228

    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    AND             shift and go to state 96
    OR              shift and go to state 97


state 229

    (24) declarevar -> RVAR ID DOUBLEDOT . type EQUAL expression
    (26) declarevar -> RVAR ID DOUBLEDOT . type
    (124) type -> . RNUMBER
    (125) type -> . RFLOAT
    (126) type -> . RSTRING
    (127) type -> . RBOOLEAN
    (128) type -> . type BRACKETO BRACKETC

    RNUMBER         shift and go to state 168
    RFLOAT          shift and go to state 169
    RSTRING         shift and go to state 170
    RBOOLEAN        shift and go to state 171

    type                           shift and go to state 255

state 230

    (59) attributesList -> ID DOUBLEDOT . type SEMICOLON
    (124) type -> . RNUMBER
    (125) type -> . RFLOAT
    (126) type -> . RSTRING
    (127) type -> . RBOOLEAN
    (128) type -> . type BRACKETO BRACKETC

    RNUMBER         shift and go to state 168
    RFLOAT          shift and go to state 169
    RSTRING         shift and go to state 170
    RBOOLEAN        shift and go to state 171

    type                           shift and go to state 256

state 231

    (58) attributesList -> attributesList ID . DOUBLEDOT type SEMICOLON

    DOUBLEDOT       shift and go to state 257


state 232

    (57) createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .

    CONSOLE         reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RVAR            reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RCONST          reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    ID              reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RIF             reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RSWITCH         reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RWHILE          reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RFOR            reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RBREAK          reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RCONTINUE       reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RRETURN         reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RINTERFACE      reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RFUNCTION       reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    NUMBER          reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    FLOAT           reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    STRING          reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    LESS            reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    NOT             reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    PARA            reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    ROBJECT         reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    TRUE            reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    FALSE           reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RPARSEINT       reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RPARSEFLOAT     reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RTYPEOF         reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    $end            reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    LLAVEC          reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RDEFAULT        reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)
    RCASE           reduce using rule 57 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)


state 233

    (69) param -> ID DOUBLEDOT . type
    (124) type -> . RNUMBER
    (125) type -> . RFLOAT
    (126) type -> . RSTRING
    (127) type -> . RBOOLEAN
    (128) type -> . type BRACKETO BRACKETC

    RNUMBER         shift and go to state 168
    RFLOAT          shift and go to state 169
    RSTRING         shift and go to state 170
    RBOOLEAN        shift and go to state 171

    type                           shift and go to state 258

state 234

    (65) declareFunction -> RFUNCTION ID PARA funcparams PARC . returntype LLAVEA instrucciones LLAVEC
    (70) returntype -> . DOUBLEDOT type
    (71) returntype -> .

    DOUBLEDOT       shift and go to state 260
    LLAVEA          reduce using rule 71 (returntype -> .)

    returntype                     shift and go to state 259

state 235

    (66) funcparams -> funcparams COMMA . param
    (69) param -> . ID DOUBLEDOT type

    ID              shift and go to state 197

    param                          shift and go to state 261

state 236

    (94) callInterface -> ROBJECT DOT RKEYS PARA ID . PARC

    PARC            shift and go to state 262


state 237

    (95) callInterface -> ROBJECT DOT RVALUES PARA ID . PARC

    PARC            shift and go to state 263


state 238

    (88) funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .

    QUESTIONM       reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    PLUS            reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    BY              reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    DIVIDED         reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    LESS            reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    MODUL           reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    DEQUAL          reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    DIFERENT        reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    MINOR           reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    MINOREQUAL      reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    GREATER         reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    GREATEREQUAL    reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    AND             reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    OR              reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    PARC            reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    SEMICOLON       reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    BRACKETC        reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    COMMA           reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    DOUBLEDOT       reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)
    LLAVEC          reduce using rule 88 (funcEmbebida -> FALSE DOT RTOSTRING PARA PARC .)


state 239

    (23) print -> CONSOLE DOT LOG PARA expression_list PARC .

    SEMICOLON       reduce using rule 23 (print -> CONSOLE DOT LOG PARA expression_list PARC .)


state 240

    (60) declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA . interfaceContent LLAVEC
    (62) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (63) interfaceContent -> . ID DOUBLEDOT expression

    ID              shift and go to state 264

    interfaceContent               shift and go to state 265

state 241

    (24) declarevar -> RVAR ID DOUBLEDOT type EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 24 (declarevar -> RVAR ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 242

    (33) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL expression
    (35) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL BRACKETO BRACKETC
    (128) type -> type BRACKETO BRACKETC .

  ! shift/reduce conflict for EQUAL resolved as shift
    EQUAL           shift and go to state 266
    BRACKETO        reduce using rule 128 (type -> type BRACKETO BRACKETC .)
    SEMICOLON       reduce using rule 128 (type -> type BRACKETO BRACKETC .)

  ! EQUAL           [ reduce using rule 128 (type -> type BRACKETO BRACKETC .) ]


state 243

    (39) assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 39 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 244

    (40) arrayFuncs -> ID DOT RPUSH PARA expression PARC .

    SEMICOLON       reduce using rule 40 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)


state 245

    (119) arraysExpression -> ID DOT RINDEXOF PARA expression PARC .

    QUESTIONM       reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    PLUS            reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    BY              reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DIVIDED         reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    LESS            reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MODUL           reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DEQUAL          reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DIFERENT        reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MINOR           reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MINOREQUAL      reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    GREATER         reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    GREATEREQUAL    reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    AND             reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    OR              reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    PARC            reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    SEMICOLON       reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    BRACKETC        reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    COMMA           reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DOUBLEDOT       reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    LLAVEC          reduce using rule 119 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)


state 246

    (61) declareInterface -> RCONST ID DOUBLEDOT ID EQUAL LLAVEA . interfaceContent LLAVEC
    (62) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (63) interfaceContent -> . ID DOUBLEDOT expression

    ID              shift and go to state 264

    interfaceContent               shift and go to state 267

state 247

    (27) declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 27 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 248

    (36) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL expression
    (38) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL BRACKETO BRACKETC
    (128) type -> type BRACKETO BRACKETC .

  ! shift/reduce conflict for EQUAL resolved as shift
    EQUAL           shift and go to state 268
    BRACKETO        reduce using rule 128 (type -> type BRACKETO BRACKETC .)
    SEMICOLON       reduce using rule 128 (type -> type BRACKETO BRACKETC .)

  ! EQUAL           [ reduce using rule 128 (type -> type BRACKETO BRACKETC .) ]


state 249

    (41) if_else -> RIF PARA expression PARC LLAVEA instrucciones . LLAVEC else
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    LLAVEC          shift and go to state 269
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 27
    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 250

    (45) case_inst -> RSWITCH PARA expression PARC LLAVEA cases . RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (46) cases -> cases . case
    (48) case -> . RCASE expression DOUBLEDOT instrucciones

    RDEFAULT        shift and go to state 270
    RCASE           shift and go to state 252

    case                           shift and go to state 271

state 251

    (47) cases -> case .

    RDEFAULT        reduce using rule 47 (cases -> case .)
    RCASE           reduce using rule 47 (cases -> case .)


state 252

    (48) case -> RCASE . expression DOUBLEDOT instrucciones
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 272
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 253

    (50) while_ -> RWHILE PARA expression PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    LLAVEC          shift and go to state 273
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 27
    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 254

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON . id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON . id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC

    ID              shift and go to state 275

    id_                            shift and go to state 274

state 255

    (24) declarevar -> RVAR ID DOUBLEDOT type . EQUAL expression
    (26) declarevar -> RVAR ID DOUBLEDOT type .
    (128) type -> type . BRACKETO BRACKETC

    EQUAL           shift and go to state 208
    SEMICOLON       reduce using rule 26 (declarevar -> RVAR ID DOUBLEDOT type .)
    BRACKETO        shift and go to state 276


state 256

    (59) attributesList -> ID DOUBLEDOT type . SEMICOLON
    (128) type -> type . BRACKETO BRACKETC

    SEMICOLON       shift and go to state 277
    BRACKETO        shift and go to state 276


state 257

    (58) attributesList -> attributesList ID DOUBLEDOT . type SEMICOLON
    (124) type -> . RNUMBER
    (125) type -> . RFLOAT
    (126) type -> . RSTRING
    (127) type -> . RBOOLEAN
    (128) type -> . type BRACKETO BRACKETC

    RNUMBER         shift and go to state 168
    RFLOAT          shift and go to state 169
    RSTRING         shift and go to state 170
    RBOOLEAN        shift and go to state 171

    type                           shift and go to state 278

state 258

    (69) param -> ID DOUBLEDOT type .
    (128) type -> type . BRACKETO BRACKETC

    PARC            reduce using rule 69 (param -> ID DOUBLEDOT type .)
    COMMA           reduce using rule 69 (param -> ID DOUBLEDOT type .)
    BRACKETO        shift and go to state 276


state 259

    (65) declareFunction -> RFUNCTION ID PARA funcparams PARC returntype . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 279


state 260

    (70) returntype -> DOUBLEDOT . type
    (124) type -> . RNUMBER
    (125) type -> . RFLOAT
    (126) type -> . RSTRING
    (127) type -> . RBOOLEAN
    (128) type -> . type BRACKETO BRACKETC

    RNUMBER         shift and go to state 168
    RFLOAT          shift and go to state 169
    RSTRING         shift and go to state 170
    RBOOLEAN        shift and go to state 171

    type                           shift and go to state 280

state 261

    (66) funcparams -> funcparams COMMA param .

    PARC            reduce using rule 66 (funcparams -> funcparams COMMA param .)
    COMMA           reduce using rule 66 (funcparams -> funcparams COMMA param .)


state 262

    (94) callInterface -> ROBJECT DOT RKEYS PARA ID PARC .

    QUESTIONM       reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    PLUS            reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    BY              reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    DIVIDED         reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    LESS            reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    MODUL           reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    DEQUAL          reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    DIFERENT        reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    MINOR           reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    MINOREQUAL      reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    GREATER         reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    GREATEREQUAL    reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    AND             reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    OR              reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    PARC            reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    SEMICOLON       reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    BRACKETC        reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    COMMA           reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    DOUBLEDOT       reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)
    LLAVEC          reduce using rule 94 (callInterface -> ROBJECT DOT RKEYS PARA ID PARC .)


state 263

    (95) callInterface -> ROBJECT DOT RVALUES PARA ID PARC .

    QUESTIONM       reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    PLUS            reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    BY              reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    DIVIDED         reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    LESS            reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    MODUL           reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    DEQUAL          reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    DIFERENT        reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    MINOR           reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    MINOREQUAL      reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    GREATER         reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    GREATEREQUAL    reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    AND             reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    OR              reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    PARC            reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    SEMICOLON       reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    BRACKETC        reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    COMMA           reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    DOUBLEDOT       reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)
    LLAVEC          reduce using rule 95 (callInterface -> ROBJECT DOT RVALUES PARA ID PARC .)


state 264

    (63) interfaceContent -> ID . DOUBLEDOT expression

    DOUBLEDOT       shift and go to state 281


state 265

    (60) declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent . LLAVEC
    (62) interfaceContent -> interfaceContent . COMMA ID DOUBLEDOT expression

    LLAVEC          shift and go to state 282
    COMMA           shift and go to state 283


state 266

    (33) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . BRACKETO expression_list BRACKETC
    (34) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . expression
    (35) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . BRACKETO BRACKETC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    BRACKETO        shift and go to state 284
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 285
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 267

    (61) declareInterface -> RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent . LLAVEC
    (62) interfaceContent -> interfaceContent . COMMA ID DOUBLEDOT expression

    LLAVEC          shift and go to state 286
    COMMA           shift and go to state 283


state 268

    (36) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . expression
    (38) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . BRACKETO BRACKETC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    BRACKETO        shift and go to state 287
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 288
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 269

    (41) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC . else
    (42) else -> . RELSE LLAVEA instrucciones LLAVEC
    (43) else -> . RELSE if_else
    (44) else -> .

    RELSE           shift and go to state 290
    CONSOLE         reduce using rule 44 (else -> .)
    RVAR            reduce using rule 44 (else -> .)
    RCONST          reduce using rule 44 (else -> .)
    ID              reduce using rule 44 (else -> .)
    RIF             reduce using rule 44 (else -> .)
    RSWITCH         reduce using rule 44 (else -> .)
    RWHILE          reduce using rule 44 (else -> .)
    RFOR            reduce using rule 44 (else -> .)
    RBREAK          reduce using rule 44 (else -> .)
    RCONTINUE       reduce using rule 44 (else -> .)
    RRETURN         reduce using rule 44 (else -> .)
    RINTERFACE      reduce using rule 44 (else -> .)
    RFUNCTION       reduce using rule 44 (else -> .)
    NUMBER          reduce using rule 44 (else -> .)
    FLOAT           reduce using rule 44 (else -> .)
    STRING          reduce using rule 44 (else -> .)
    LESS            reduce using rule 44 (else -> .)
    NOT             reduce using rule 44 (else -> .)
    PARA            reduce using rule 44 (else -> .)
    ROBJECT         reduce using rule 44 (else -> .)
    TRUE            reduce using rule 44 (else -> .)
    FALSE           reduce using rule 44 (else -> .)
    RPARSEINT       reduce using rule 44 (else -> .)
    RPARSEFLOAT     reduce using rule 44 (else -> .)
    RTYPEOF         reduce using rule 44 (else -> .)
    $end            reduce using rule 44 (else -> .)
    LLAVEC          reduce using rule 44 (else -> .)
    RDEFAULT        reduce using rule 44 (else -> .)
    RCASE           reduce using rule 44 (else -> .)

    else                           shift and go to state 289

state 270

    (45) case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT . DOUBLEDOT instrucciones LLAVEC

    DOUBLEDOT       shift and go to state 291


state 271

    (46) cases -> cases case .

    RDEFAULT        reduce using rule 46 (cases -> cases case .)
    RCASE           reduce using rule 46 (cases -> cases case .)


state 272

    (48) case -> RCASE expression . DOUBLEDOT instrucciones
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    DOUBLEDOT       shift and go to state 292
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 273

    (50) while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RSWITCH         reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RINTERFACE      reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RFUNCTION       reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    PARA            reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    ROBJECT         reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RPARSEINT       reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RPARSEFLOAT     reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RTYPEOF         reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RDEFAULT        reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RCASE           reduce using rule 50 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)


state 274

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ . PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ . LESS LESS PARC LLAVEA instrucciones LLAVEC

    PLUS            shift and go to state 293
    LESS            shift and go to state 294


state 275

    (98) id_ -> ID .
    (99) id_ -> ID . BRACKETO expression BRACKETC

    PLUS            reduce using rule 98 (id_ -> ID .)
    LESS            reduce using rule 98 (id_ -> ID .)
    BRACKETO        shift and go to state 115


state 276

    (128) type -> type BRACKETO . BRACKETC

    BRACKETC        shift and go to state 295


state 277

    (59) attributesList -> ID DOUBLEDOT type SEMICOLON .

    LLAVEC          reduce using rule 59 (attributesList -> ID DOUBLEDOT type SEMICOLON .)
    ID              reduce using rule 59 (attributesList -> ID DOUBLEDOT type SEMICOLON .)


state 278

    (58) attributesList -> attributesList ID DOUBLEDOT type . SEMICOLON
    (128) type -> type . BRACKETO BRACKETC

    SEMICOLON       shift and go to state 296
    BRACKETO        shift and go to state 276


state 279

    (65) declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    instrucciones                  shift and go to state 297
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 280

    (70) returntype -> DOUBLEDOT type .
    (128) type -> type . BRACKETO BRACKETC

    LLAVEA          reduce using rule 70 (returntype -> DOUBLEDOT type .)
    BRACKETO        shift and go to state 276


state 281

    (63) interfaceContent -> ID DOUBLEDOT . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 298
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 282

    (60) declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC .

    SEMICOLON       reduce using rule 60 (declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC .)


state 283

    (62) interfaceContent -> interfaceContent COMMA . ID DOUBLEDOT expression

    ID              shift and go to state 299


state 284

    (33) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO . expression_list BRACKETC
    (35) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO . BRACKETC
    (96) expression_list -> . expression_list COMMA expression
    (97) expression_list -> . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    BRACKETC        shift and go to state 300
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression_list                shift and go to state 301
    expression                     shift and go to state 134
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 285

    (34) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 34 (declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 286

    (61) declareInterface -> RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC .

    SEMICOLON       reduce using rule 61 (declareInterface -> RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC .)


state 287

    (36) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO . expression_list BRACKETC
    (38) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO . BRACKETC
    (96) expression_list -> . expression_list COMMA expression
    (97) expression_list -> . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    BRACKETC        shift and go to state 302
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression_list                shift and go to state 303
    expression                     shift and go to state 134
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 288

    (37) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    SEMICOLON       reduce using rule 37 (declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 289

    (41) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .

    CONSOLE         reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RVAR            reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RCONST          reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    ID              reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RIF             reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RSWITCH         reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RWHILE          reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RFOR            reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RBREAK          reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RCONTINUE       reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RRETURN         reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RINTERFACE      reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RFUNCTION       reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    NUMBER          reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    FLOAT           reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    STRING          reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    LESS            reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    NOT             reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    PARA            reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    ROBJECT         reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    TRUE            reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    FALSE           reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RPARSEINT       reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RPARSEFLOAT     reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RTYPEOF         reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    $end            reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    LLAVEC          reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RDEFAULT        reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RCASE           reduce using rule 41 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)


state 290

    (42) else -> RELSE . LLAVEA instrucciones LLAVEC
    (43) else -> RELSE . if_else
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 304
    RIF             shift and go to state 30

    if_else                        shift and go to state 305

state 291

    (45) case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 27
    instrucciones                  shift and go to state 306
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 292

    (48) case -> RCASE expression DOUBLEDOT . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 27
    instrucciones                  shift and go to state 307
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 293

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS . PLUS PARC LLAVEA instrucciones LLAVEC

    PLUS            shift and go to state 308


state 294

    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS . LESS PARC LLAVEA instrucciones LLAVEC

    LESS            shift and go to state 309


state 295

    (128) type -> type BRACKETO BRACKETC .

    EQUAL           reduce using rule 128 (type -> type BRACKETO BRACKETC .)
    BRACKETO        reduce using rule 128 (type -> type BRACKETO BRACKETC .)
    SEMICOLON       reduce using rule 128 (type -> type BRACKETO BRACKETC .)
    PARC            reduce using rule 128 (type -> type BRACKETO BRACKETC .)
    COMMA           reduce using rule 128 (type -> type BRACKETO BRACKETC .)
    LLAVEA          reduce using rule 128 (type -> type BRACKETO BRACKETC .)


state 296

    (58) attributesList -> attributesList ID DOUBLEDOT type SEMICOLON .

    LLAVEC          reduce using rule 58 (attributesList -> attributesList ID DOUBLEDOT type SEMICOLON .)
    ID              reduce using rule 58 (attributesList -> attributesList ID DOUBLEDOT type SEMICOLON .)


state 297

    (65) declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    LLAVEC          shift and go to state 310
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 298

    (63) interfaceContent -> ID DOUBLEDOT expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    LLAVEC          reduce using rule 63 (interfaceContent -> ID DOUBLEDOT expression .)
    COMMA           reduce using rule 63 (interfaceContent -> ID DOUBLEDOT expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 299

    (62) interfaceContent -> interfaceContent COMMA ID . DOUBLEDOT expression

    DOUBLEDOT       shift and go to state 311


state 300

    (35) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .

    SEMICOLON       reduce using rule 35 (declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)


state 301

    (33) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list . BRACKETC
    (96) expression_list -> expression_list . COMMA expression

    BRACKETC        shift and go to state 312
    COMMA           shift and go to state 185


state 302

    (38) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .

    SEMICOLON       reduce using rule 38 (declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)


state 303

    (36) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list . BRACKETC
    (96) expression_list -> expression_list . COMMA expression

    BRACKETC        shift and go to state 313
    COMMA           shift and go to state 185


state 304

    (42) else -> RELSE LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    instrucciones                  shift and go to state 314
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 305

    (43) else -> RELSE if_else .

    CONSOLE         reduce using rule 43 (else -> RELSE if_else .)
    RVAR            reduce using rule 43 (else -> RELSE if_else .)
    RCONST          reduce using rule 43 (else -> RELSE if_else .)
    ID              reduce using rule 43 (else -> RELSE if_else .)
    RIF             reduce using rule 43 (else -> RELSE if_else .)
    RSWITCH         reduce using rule 43 (else -> RELSE if_else .)
    RWHILE          reduce using rule 43 (else -> RELSE if_else .)
    RFOR            reduce using rule 43 (else -> RELSE if_else .)
    RBREAK          reduce using rule 43 (else -> RELSE if_else .)
    RCONTINUE       reduce using rule 43 (else -> RELSE if_else .)
    RRETURN         reduce using rule 43 (else -> RELSE if_else .)
    RINTERFACE      reduce using rule 43 (else -> RELSE if_else .)
    RFUNCTION       reduce using rule 43 (else -> RELSE if_else .)
    NUMBER          reduce using rule 43 (else -> RELSE if_else .)
    FLOAT           reduce using rule 43 (else -> RELSE if_else .)
    STRING          reduce using rule 43 (else -> RELSE if_else .)
    LESS            reduce using rule 43 (else -> RELSE if_else .)
    NOT             reduce using rule 43 (else -> RELSE if_else .)
    PARA            reduce using rule 43 (else -> RELSE if_else .)
    ROBJECT         reduce using rule 43 (else -> RELSE if_else .)
    TRUE            reduce using rule 43 (else -> RELSE if_else .)
    FALSE           reduce using rule 43 (else -> RELSE if_else .)
    RPARSEINT       reduce using rule 43 (else -> RELSE if_else .)
    RPARSEFLOAT     reduce using rule 43 (else -> RELSE if_else .)
    RTYPEOF         reduce using rule 43 (else -> RELSE if_else .)
    $end            reduce using rule 43 (else -> RELSE if_else .)
    LLAVEC          reduce using rule 43 (else -> RELSE if_else .)
    RDEFAULT        reduce using rule 43 (else -> RELSE if_else .)
    RCASE           reduce using rule 43 (else -> RELSE if_else .)


state 306

    (45) case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    LLAVEC          shift and go to state 315
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 27
    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 307

    (48) case -> RCASE expression DOUBLEDOT instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    RDEFAULT        reduce using rule 48 (case -> RCASE expression DOUBLEDOT instrucciones .)
    RCASE           reduce using rule 48 (case -> RCASE expression DOUBLEDOT instrucciones .)
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 27
    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 308

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 316


state 309

    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 317


state 310

    (65) declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RSWITCH         reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RINTERFACE      reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RFUNCTION       reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    PARA            reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    ROBJECT         reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RPARSEINT       reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RPARSEFLOAT     reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RTYPEOF         reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RDEFAULT        reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)
    RCASE           reduce using rule 65 (declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC .)


state 311

    (62) interfaceContent -> interfaceContent COMMA ID DOUBLEDOT . expression
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ID              shift and go to state 76
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    expression                     shift and go to state 318
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    relacional                     shift and go to state 34
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    id_                            shift and go to state 35
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    callFunction                   shift and go to state 75
    funcEmbebida                   shift and go to state 48

state 312

    (33) declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .

    SEMICOLON       reduce using rule 33 (declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)


state 313

    (36) declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .

    SEMICOLON       reduce using rule 36 (declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)


state 314

    (42) else -> RELSE LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    LLAVEC          shift and go to state 319
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 315

    (45) case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .

    CONSOLE         reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RVAR            reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RCONST          reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    ID              reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RIF             reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RSWITCH         reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RWHILE          reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RFOR            reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RBREAK          reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RRETURN         reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RINTERFACE      reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RFUNCTION       reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    NUMBER          reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    FLOAT           reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    STRING          reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    LESS            reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    NOT             reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    PARA            reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    ROBJECT         reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    TRUE            reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    FALSE           reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RPARSEINT       reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RPARSEFLOAT     reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RTYPEOF         reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    $end            reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    LLAVEC          reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RDEFAULT        reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)
    RCASE           reduce using rule 45 (case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC .)


state 316

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 320


state 317

    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 321


state 318

    (62) interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .
    (100) aritmetica -> expression . PLUS expression
    (101) aritmetica -> expression . BY expression
    (102) aritmetica -> expression . DIVIDED expression
    (103) aritmetica -> expression . LESS expression
    (104) aritmetica -> expression . MODUL expression
    (106) relacional -> expression . DEQUAL expression
    (107) relacional -> expression . DIFERENT expression
    (108) relacional -> expression . MINOR expression
    (109) relacional -> expression . MINOREQUAL expression
    (110) relacional -> expression . GREATER expression
    (111) relacional -> expression . GREATEREQUAL expression
    (112) logica -> expression . AND expression
    (113) logica -> expression . OR expression

    LLAVEC          reduce using rule 62 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    COMMA           reduce using rule 62 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    PLUS            shift and go to state 85
    BY              shift and go to state 86
    DIVIDED         shift and go to state 87
    LESS            shift and go to state 88
    MODUL           shift and go to state 89
    DEQUAL          shift and go to state 90
    DIFERENT        shift and go to state 91
    MINOR           shift and go to state 92
    MINOREQUAL      shift and go to state 93
    GREATER         shift and go to state 94
    GREATEREQUAL    shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 319

    (42) else -> RELSE LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RSWITCH         reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RINTERFACE      reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RFUNCTION       reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    PARA            reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    ROBJECT         reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RPARSEINT       reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RPARSEFLOAT     reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RTYPEOF         reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RDEFAULT        reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RCASE           reduce using rule 42 (else -> RELSE LLAVEA instrucciones LLAVEC .)


state 320

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    instrucciones                  shift and go to state 322
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 321

    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    instrucciones                  shift and go to state 323
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 322

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    LLAVEC          shift and go to state 324
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 323

    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print SEMICOLON
    (5) instruccion -> . declarevar SEMICOLON
    (6) instruccion -> . declareConst SEMICOLON
    (7) instruccion -> . assignVar SEMICOLON
    (8) instruccion -> . declareArray SEMICOLON
    (9) instruccion -> . declareArrayConst SEMICOLON
    (10) instruccion -> . assingArray SEMICOLON
    (11) instruccion -> . arrayFuncs SEMICOLON
    (12) instruccion -> . if_else
    (13) instruccion -> . case_inst
    (14) instruccion -> . ternario SEMICOLON
    (15) instruccion -> . while_
    (16) instruccion -> . for_
    (17) instruccion -> . transfer SEMICOLON
    (18) instruccion -> . createInterface
    (19) instruccion -> . declareInterface SEMICOLON
    (20) instruccion -> . modifyInterface SEMICOLON
    (21) instruccion -> . declareFunction
    (22) instruccion -> . callFunction SEMICOLON
    (23) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (24) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (25) declarevar -> . RVAR ID EQUAL expression
    (26) declarevar -> . RVAR ID DOUBLEDOT type
    (27) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (28) declareConst -> . RCONST ID EQUAL expression
    (29) declareConst -> . RCONST ID DOUBLEDOT type
    (30) assignVar -> . ID EQUAL expression
    (31) assignVar -> . ID PLUS EQUAL expression
    (32) assignVar -> . ID LESS EQUAL expression
    (33) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (34) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (35) declareArray -> . RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (36) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (37) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (38) declareArrayConst -> . RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (39) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (40) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (41) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (45) case_inst -> . RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC
    (49) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (50) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (51) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (52) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (53) transfer -> . RBREAK
    (54) transfer -> . RCONTINUE
    (55) transfer -> . RRETURN
    (56) transfer -> . RRETURN expression
    (57) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (60) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (61) declareInterface -> . RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (64) modifyInterface -> . ID DOT ID EQUAL expression
    (65) declareFunction -> . RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC
    (72) callFunction -> . ID PARA expression_list PARC
    (73) callFunction -> . ID PARA PARC
    (74) expression -> . primitivo
    (75) expression -> . aritmetica
    (76) expression -> . relacional
    (77) expression -> . logica
    (78) expression -> . expression_group
    (79) expression -> . id_
    (80) expression -> . arraysExpression
    (81) expression -> . callInterface
    (82) expression -> . boolean
    (83) expression -> . callFunction
    (84) expression -> . funcEmbebida
    (115) primitivo -> . NUMBER
    (116) primitivo -> . FLOAT
    (117) primitivo -> . STRING
    (100) aritmetica -> . expression PLUS expression
    (101) aritmetica -> . expression BY expression
    (102) aritmetica -> . expression DIVIDED expression
    (103) aritmetica -> . expression LESS expression
    (104) aritmetica -> . expression MODUL expression
    (105) aritmetica -> . LESS expression
    (106) relacional -> . expression DEQUAL expression
    (107) relacional -> . expression DIFERENT expression
    (108) relacional -> . expression MINOR expression
    (109) relacional -> . expression MINOREQUAL expression
    (110) relacional -> . expression GREATER expression
    (111) relacional -> . expression GREATEREQUAL expression
    (112) logica -> . expression AND expression
    (113) logica -> . expression OR expression
    (114) logica -> . NOT expression
    (92) expression_group -> . PARA expression PARC
    (98) id_ -> . ID
    (99) id_ -> . ID BRACKETO expression BRACKETC
    (118) arraysExpression -> . ID DOT RPOP PARA PARC
    (119) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (120) arraysExpression -> . ID DOT RJOIN PARA PARC
    (121) arraysExpression -> . ID DOT RLENGTH
    (93) callInterface -> . ID DOT ID
    (94) callInterface -> . ROBJECT DOT RKEYS PARA ID PARC
    (95) callInterface -> . ROBJECT DOT RVALUES PARA ID PARC
    (122) boolean -> . TRUE
    (123) boolean -> . FALSE
    (85) funcEmbebida -> . RPARSEINT PARA expression PARC
    (86) funcEmbebida -> . RPARSEFLOAT PARA expression PARC
    (87) funcEmbebida -> . ID DOT RTOSTRING PARA PARC
    (88) funcEmbebida -> . FALSE DOT RTOSTRING PARA PARC
    (89) funcEmbebida -> . ID DOT RTOLOWERCASE PARA PARC
    (90) funcEmbebida -> . ID DOT RTOUPPERCASE PARA PARC
    (91) funcEmbebida -> . RTYPEOF expression

    LLAVEC          shift and go to state 325
    CONSOLE         shift and go to state 23
    RVAR            shift and go to state 25
    RCONST          shift and go to state 28
    ID              shift and go to state 26
    RIF             shift and go to state 30
    RSWITCH         shift and go to state 31
    RWHILE          shift and go to state 32
    RFOR            shift and go to state 33
    RBREAK          shift and go to state 36
    RCONTINUE       shift and go to state 37
    RRETURN         shift and go to state 38
    RINTERFACE      shift and go to state 39
    RFUNCTION       shift and go to state 40
    NUMBER          shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 51
    LESS            shift and go to state 29
    NOT             shift and go to state 52
    PARA            shift and go to state 24
    ROBJECT         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    RPARSEINT       shift and go to state 56
    RPARSEFLOAT     shift and go to state 57
    RTYPEOF         shift and go to state 58

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 34
    id_                            shift and go to state 35
    instruccion                    shift and go to state 59
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    declareArrayConst              shift and go to state 9
    assingArray                    shift and go to state 10
    arrayFuncs                     shift and go to state 11
    if_else                        shift and go to state 12
    case_inst                      shift and go to state 13
    ternario                       shift and go to state 14
    while_                         shift and go to state 15
    for_                           shift and go to state 16
    transfer                       shift and go to state 17
    createInterface                shift and go to state 18
    declareInterface               shift and go to state 19
    modifyInterface                shift and go to state 20
    declareFunction                shift and go to state 21
    callFunction                   shift and go to state 22
    expression                     shift and go to state 27
    primitivo                      shift and go to state 41
    aritmetica                     shift and go to state 42
    logica                         shift and go to state 43
    expression_group               shift and go to state 44
    arraysExpression               shift and go to state 45
    callInterface                  shift and go to state 46
    boolean                        shift and go to state 47
    funcEmbebida                   shift and go to state 48

state 324

    (51) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RSWITCH         reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RINTERFACE      reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RFUNCTION       reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    PARA            reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    ROBJECT         reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RPARSEINT       reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RPARSEFLOAT     reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RTYPEOF         reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RDEFAULT        reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RCASE           reduce using rule 51 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)


state 325

    (52) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RSWITCH         reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RINTERFACE      reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RFUNCTION       reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    PARA            reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    ROBJECT         reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RPARSEINT       reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RPARSEFLOAT     reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RTYPEOF         reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RDEFAULT        reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RCASE           reduce using rule 52 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 26 resolved as shift
WARNING: shift/reduce conflict for LESS in state 26 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for BY in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVIDED in state 112 resolved as shift
WARNING: shift/reduce conflict for LESS in state 112 resolved as shift
WARNING: shift/reduce conflict for MODUL in state 112 resolved as shift
WARNING: shift/reduce conflict for DEQUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for DIFERENT in state 112 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 112 resolved as shift
WARNING: shift/reduce conflict for MINOREQUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 112 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 242 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 248 resolved as shift
