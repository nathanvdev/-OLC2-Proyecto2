
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftDEQUALDIFERENTMINORMINOREQUALGREATERGREATEREQUALleftPLUSLESSleftBYDIVIDEDMODULrightUMENOSAND BRACKETC BRACKETO BY COMMA CONSOLE DEQUAL DIFERENT DIVIDED DOT DOUBLEDOT EQUAL FALSE FLOAT GREATER GREATEREQUAL ID LESS LLAVEA LLAVEC LOG MINOR MINOREQUAL MODUL NOT NUMBER OR PARA PARC PLUS QUESTIONM RBOOLEAN RBREAK RCASE RCONST RCONTINUE RDEFAULT RELSE RFLOAT RFOR RFUNCTION RIF RINDEXOF RINTERFACE RJOIN RKEYS RLENGTH RNUMBER ROBJECT RPARSEFLOAT RPARSEINT RPOP RPUSH RRETURN RSTRING RSWITCH RTOLOWERCASE RTOSTRING RTOUPPERCASE RTYPEOF RVALUES RVAR RWHILE SEMICOLON STRING TRUEstart    : instrucciones instrucciones    : instrucciones instruccion\n                        | instruccioninstruccion  : print SEMICOLON\n                    | declarevar SEMICOLON\n                    | declareConst SEMICOLON\n                    | assignVar SEMICOLON\n                    | declareArray SEMICOLON\n                    | declareArrayConst SEMICOLON\n                    | assingArray SEMICOLON\n                    | arrayFuncs SEMICOLON\n                    | if_else\n                    | case_inst\n                    | ternario SEMICOLON\n                    | while_\n                    | for_\n                    | transfer SEMICOLON\n                    | createInterface\n                    | declareInterface SEMICOLON\n                    | modifyInterface SEMICOLON\n                    | declareFunction\n                    | callFunction SEMICOLONprint    : CONSOLE DOT LOG PARA expression_list PARCdeclarevar  : RVAR ID DOUBLEDOT type EQUAL expression\n                | RVAR ID EQUAL expression\n                | RVAR ID DOUBLEDOT typedeclareConst : RCONST ID DOUBLEDOT type EQUAL expression\n                    | RCONST ID EQUAL expression\n                    | RCONST ID DOUBLEDOT typeassignVar    : ID EQUAL expression\n                    | ID PLUS EQUAL expression\n                    | ID LESS EQUAL expressiondeclareArray : RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC\n                    | RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression\n                    | RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETCdeclareArrayConst : RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC\n                    | RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression\n                    | RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETCassingArray : ID BRACKETO expression BRACKETC EQUAL expressionarrayFuncs   : ID DOT RPUSH PARA expression PARCif_else  : RIF PARA expression PARC LLAVEA instrucciones LLAVEC elseelse : RELSE LLAVEA instrucciones LLAVEC\n            | RELSE if_else\n            |case_inst : RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVECcases : cases case \n             | casecase : RCASE expression DOUBLEDOT instruccionesternario : expression QUESTIONM expression DOUBLEDOT expressionwhile_   : RWHILE PARA expression PARC LLAVEA instrucciones LLAVECfor_ : RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC\n            | RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVECtransfer : RBREAK\n                | RCONTINUE\n                | RRETURN\n                | RRETURN expressioncreateInterface : RINTERFACE ID LLAVEA attributesList LLAVECattributesList : attributesList ID DOUBLEDOT type SEMICOLON\n                      | ID DOUBLEDOT type SEMICOLONdeclareInterface : RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC\n                        | RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVECinterfaceContent : interfaceContent COMMA ID DOUBLEDOT expression\n                        | ID DOUBLEDOT expressionmodifyInterface  : ID DOT ID EQUAL expressiondeclareFunction : RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVECfuncparams : funcparams COMMA param\n                  | param\n                  |param : ID DOUBLEDOT typereturntype : DOUBLEDOT type\n                  |callFunction : ID PARA expression_list PARC\n                    | ID PARA PARCexpression   : primitivo \n                    | aritmetica\n                    | relacional\n                    | logica\n                    | expression_group\n                    | id_\n                    | arraysExpression\n                    | callInterface\n                    | boolean\n                    | callFunction\n                    | funcEmbebidafuncEmbebida : RPARSEINT PARA expression PARC\n                    | RPARSEFLOAT PARA expression PARC\n                    | ID DOT RTOSTRING PARA PARC\n                    | FALSE DOT RTOSTRING PARA PARC\n                    | ID DOT RTOLOWERCASE PARA PARC\n                    | ID DOT RTOUPPERCASE PARA PARC\n                    | RTYPEOF expressionexpression_group   : PARA expression PARCcallInterface    : ID DOT ID\n                        | ROBJECT DOT RKEYS PARA ID PARC\n                        | ROBJECT DOT RVALUES PARA ID PARCexpression_list  : expression_list COMMA expression\n                         | expressionid_  : ID\n            | ID BRACKETO expression BRACKETCaritmetica   : expression PLUS expression\n                    | expression BY expression\n                    | expression DIVIDED expression\n                    | expression LESS expression\n                    | expression MODUL expression\n                    | LESS expression %prec UMENOSrelacional   : expression DEQUAL expression\n                    | expression DIFERENT expression\n                    | expression MINOR expression\n                    | expression MINOREQUAL expression\n                    | expression GREATER expression\n                    | expression GREATEREQUAL expressionlogica   : expression AND expression\n                | expression OR expression\n                | NOT expressionprimitivo    : NUMBER\n                    | FLOAT\n                    | STRINGarraysExpression : ID DOT RPOP PARA PARC\n                        | ID DOT RINDEXOF PARA expression PARC\n                        | ID DOT RJOIN PARA PARC\n                        | ID DOT RLENGTHboolean  : TRUE\n                | FALSEtype     : RNUMBER\n                | RFLOAT\n                | RSTRING\n                | RBOOLEAN\n                | type BRACKETO BRACKETC'
    
_lr_action_items = {'CONSOLE':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[23,23,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,23,23,-57,23,23,-44,-50,23,-41,23,23,23,23,-43,23,23,-65,23,-45,-42,23,23,23,23,-51,-52,]),'RVAR':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,103,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[25,25,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,155,25,25,-57,25,25,-44,-50,25,-41,25,25,25,25,-43,25,25,-65,25,-45,-42,25,25,25,25,-51,-52,]),'RCONST':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[28,28,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,28,28,-57,28,28,-44,-50,28,-41,28,28,28,28,-43,28,28,-65,28,-45,-42,28,28,28,28,-51,-52,]),'ID':([0,2,3,12,13,15,16,18,21,24,25,28,29,38,39,40,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,116,117,118,120,121,149,150,155,156,157,163,176,177,179,185,186,193,196,200,201,208,210,222,224,226,232,235,240,246,249,252,253,254,266,268,269,273,277,279,281,283,284,287,289,291,292,296,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[26,26,-3,-12,-13,-15,-16,-18,-21,76,77,98,76,76,105,106,76,76,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,76,76,123,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,165,166,76,76,76,187,76,194,195,197,76,76,76,76,76,76,76,231,236,237,76,76,76,26,26,-57,197,264,264,26,76,26,275,76,76,-44,-50,-59,26,76,299,76,76,-41,26,26,-58,26,26,-43,26,26,-65,76,26,-45,-42,26,26,26,26,-51,-52,]),'RIF':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,290,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[30,30,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,30,30,-57,30,30,-44,-50,30,-41,30,30,30,30,30,-43,30,30,-65,30,-45,-42,30,30,30,30,-51,-52,]),'RSWITCH':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[31,31,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,31,31,-57,31,31,-44,-50,31,-41,31,31,31,31,-43,31,31,-65,31,-45,-42,31,31,31,31,-51,-52,]),'RWHILE':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[32,32,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,32,32,-57,32,32,-44,-50,32,-41,32,32,32,32,-43,32,32,-65,32,-45,-42,32,32,32,32,-51,-52,]),'RFOR':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[33,33,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,33,33,-57,33,33,-44,-50,33,-41,33,33,33,33,-43,33,33,-65,33,-45,-42,33,33,33,33,-51,-52,]),'RBREAK':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[36,36,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,36,36,-57,36,36,-44,-50,36,-41,36,36,36,36,-43,36,36,-65,36,-45,-42,36,36,36,36,-51,-52,]),'RCONTINUE':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[37,37,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,37,37,-57,37,37,-44,-50,37,-41,37,37,37,37,-43,37,37,-65,37,-45,-42,37,37,37,37,-51,-52,]),'RRETURN':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[38,38,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,38,38,-57,38,38,-44,-50,38,-41,38,38,38,38,-43,38,38,-65,38,-45,-42,38,38,38,38,-51,-52,]),'RINTERFACE':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[39,39,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,39,39,-57,39,39,-44,-50,39,-41,39,39,39,39,-43,39,39,-65,39,-45,-42,39,39,39,39,-51,-52,]),'RFUNCTION':([0,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,224,226,232,249,253,269,273,279,289,291,292,297,304,305,306,307,310,314,315,319,320,321,322,323,324,325,],[40,40,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,40,40,-57,40,40,-44,-50,40,-41,40,40,40,40,-43,40,40,-65,40,-45,-42,40,40,40,40,-51,-52,]),'NUMBER':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[49,49,-3,-12,-13,-15,-16,-18,-21,49,49,49,49,49,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-57,49,49,49,49,49,-44,-50,49,49,49,49,-41,49,49,49,49,-43,49,49,-65,49,49,-45,-42,49,49,49,49,-51,-52,]),'FLOAT':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[50,50,-3,-12,-13,-15,-16,-18,-21,50,50,50,50,50,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-57,50,50,50,50,50,-44,-50,50,50,50,50,-41,50,50,50,50,-43,50,50,-65,50,50,-45,-42,50,50,50,50,-51,-52,]),'STRING':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[51,51,-3,-12,-13,-15,-16,-18,-21,51,51,51,51,51,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-57,51,51,51,51,51,-44,-50,51,51,51,51,-41,51,51,51,51,-43,51,51,-65,51,51,-45,-42,51,51,51,51,-51,-52,]),'LESS':([0,2,3,12,13,15,16,18,21,22,24,26,27,29,34,35,38,41,42,43,44,45,46,47,48,49,50,51,52,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,110,111,112,114,115,118,119,120,121,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,161,162,163,164,165,172,173,174,175,176,177,179,184,185,186,189,193,203,204,206,208,210,211,212,213,214,215,216,217,218,219,220,222,224,226,227,228,232,238,241,243,245,247,249,252,253,262,263,266,268,269,272,273,274,275,279,281,284,285,287,288,289,291,292,294,297,298,304,305,306,307,310,311,314,315,318,319,320,321,322,323,324,325,],[29,29,-3,-12,-13,-15,-16,-18,-21,-83,29,80,88,29,-76,-79,29,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,29,-122,-123,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,88,-83,-98,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-105,29,29,29,88,88,29,29,88,-92,29,29,88,29,29,88,-93,-121,-73,88,88,-100,-101,-102,-103,-104,88,88,88,88,88,88,88,88,29,88,88,88,88,88,29,88,-93,88,88,88,-99,29,29,29,-72,29,29,88,29,-85,-86,-99,29,29,88,88,-118,88,-120,-87,-89,-90,88,88,29,29,29,-76,88,-57,-88,88,88,-119,88,29,29,29,-94,-95,29,29,-44,88,-50,294,-98,29,29,29,88,29,88,-41,29,29,309,29,88,29,-43,29,29,-65,29,29,-45,88,-42,29,29,29,29,-51,-52,]),'NOT':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[52,52,-3,-12,-13,-15,-16,-18,-21,52,52,52,52,52,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-57,52,52,52,52,52,-44,-50,52,52,52,52,-41,52,52,52,52,-43,52,52,-65,52,52,-45,-42,52,52,52,52,-51,-52,]),'PARA':([0,2,3,12,13,15,16,18,21,24,26,29,30,31,32,33,38,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,106,110,111,113,115,118,120,121,124,125,126,127,129,130,131,150,158,159,160,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[24,24,-3,-12,-13,-15,-16,-18,-21,24,83,24,100,101,102,103,24,24,110,111,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,83,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,157,24,24,163,24,24,24,24,177,178,179,180,181,182,183,24,200,201,202,24,24,24,24,24,24,24,24,24,24,24,24,-57,24,24,24,24,24,-44,-50,24,24,24,24,-41,24,24,24,24,-43,24,24,-65,24,24,-45,-42,24,24,24,24,-51,-52,]),'ROBJECT':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[53,53,-3,-12,-13,-15,-16,-18,-21,53,53,53,53,53,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-57,53,53,53,53,53,-44,-50,53,53,53,53,-41,53,53,53,53,-43,53,53,-65,53,53,-45,-42,53,53,53,53,-51,-52,]),'TRUE':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[54,54,-3,-12,-13,-15,-16,-18,-21,54,54,54,54,54,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-57,54,54,54,54,54,-44,-50,54,54,54,54,-41,54,54,54,54,-43,54,54,-65,54,54,-45,-42,54,54,54,54,-51,-52,]),'FALSE':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[55,55,-3,-12,-13,-15,-16,-18,-21,55,55,55,55,55,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-57,55,55,55,55,55,-44,-50,55,55,55,55,-41,55,55,55,55,-43,55,55,-65,55,55,-45,-42,55,55,55,55,-51,-52,]),'RPARSEINT':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[56,56,-3,-12,-13,-15,-16,-18,-21,56,56,56,56,56,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-57,56,56,56,56,56,-44,-50,56,56,56,56,-41,56,56,56,56,-43,56,56,-65,56,56,-45,-42,56,56,56,56,-51,-52,]),'RPARSEFLOAT':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[57,57,-3,-12,-13,-15,-16,-18,-21,57,57,57,57,57,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-57,57,57,57,57,57,-44,-50,57,57,57,57,-41,57,57,57,57,-43,57,57,-65,57,57,-45,-42,57,57,57,57,-51,-52,]),'RTYPEOF':([0,2,3,12,13,15,16,18,21,24,29,38,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,232,249,252,253,266,268,269,273,279,281,284,287,289,291,292,297,304,305,306,307,310,311,314,315,319,320,321,322,323,324,325,],[58,58,-3,-12,-13,-15,-16,-18,-21,58,58,58,58,58,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-57,58,58,58,58,58,-44,-50,58,58,58,58,-41,58,58,58,58,-43,58,58,-65,58,58,-45,-42,58,58,58,58,-51,-52,]),'$end':([1,2,3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,232,269,273,289,305,310,315,319,324,325,],[0,-1,-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,-57,-44,-50,-41,-43,-65,-45,-42,-51,-52,]),'LLAVEC':([3,12,13,15,16,18,21,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,99,107,112,114,128,133,136,137,138,139,140,141,142,143,144,145,146,147,148,165,184,196,203,204,206,213,215,216,217,218,232,238,245,249,253,262,263,265,267,269,273,277,289,296,297,298,305,306,310,314,315,318,319,322,323,324,325,],[-3,-12,-13,-15,-16,-18,-21,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,-83,-98,-105,-114,-91,-92,-121,-73,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,-113,-93,-72,232,-85,-86,-99,-118,-120,-87,-89,-90,-57,-88,-119,269,273,-94,-95,282,286,-44,-50,-59,-41,-58,310,-63,-43,315,-65,319,-45,-62,-42,324,325,-51,-52,]),'RDEFAULT':([3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,232,250,251,269,271,273,289,305,307,310,315,319,324,325,],[-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,-57,270,-47,-44,-46,-50,-41,-43,-48,-65,-45,-42,-51,-52,]),'RCASE':([3,12,13,15,16,18,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,225,232,250,251,269,271,273,289,305,307,310,315,319,324,325,],[-3,-12,-13,-15,-16,-18,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-14,-17,-19,-20,-22,252,-57,252,-47,-44,-46,-50,-41,-43,-48,-65,-45,-42,-51,-52,]),'SEMICOLON':([4,5,6,7,8,9,10,11,14,17,19,20,22,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,54,55,75,76,99,104,107,112,114,119,128,133,136,137,138,139,140,141,142,143,144,145,146,147,148,154,165,167,168,169,170,171,172,173,174,184,188,189,203,204,206,211,213,215,216,217,218,220,227,238,239,241,242,243,244,245,247,248,255,256,262,263,278,282,285,286,288,295,300,302,312,313,],[60,61,62,63,64,65,66,67,68,69,70,71,72,-76,-79,-53,-54,-55,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,-83,-98,-105,-56,-114,-91,-92,-30,-121,-73,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,-113,193,-93,-26,-124,-125,-126,-127,-25,-31,-32,-72,-29,-28,-85,-86,-99,-64,-118,-120,-87,-89,-90,-49,254,-88,-23,-24,-128,-39,-40,-119,-27,-128,-26,277,-94,-95,296,-60,-34,-61,-37,-128,-35,-38,-33,-36,]),'QUESTIONM':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,75,76,99,107,112,114,123,128,133,136,137,138,139,140,141,142,143,144,145,146,147,148,165,175,184,203,204,206,213,215,216,217,218,238,245,262,263,],[-83,-98,84,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,-83,-98,-105,-114,-91,-92,-93,-121,-73,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,-113,-93,-99,-72,-85,-86,-99,-118,-120,-87,-89,-90,-88,-119,-94,-95,]),'PLUS':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,274,275,285,288,293,298,318,],[-83,79,85,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,85,-83,-98,-105,85,85,85,-92,85,85,-93,-121,-73,85,85,-100,-101,-102,-103,-104,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-93,85,85,85,-99,-72,85,-85,-86,-99,85,85,-118,85,-120,-87,-89,-90,85,85,-76,85,-88,85,85,-119,85,-94,-95,85,293,-98,85,85,308,85,85,]),'BY':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,86,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,86,-83,-98,-105,86,86,86,-92,86,86,-93,-121,-73,86,86,86,-101,-102,86,-104,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-93,86,86,86,-99,-72,86,-85,-86,-99,86,86,-118,86,-120,-87,-89,-90,86,86,-76,86,-88,86,86,-119,86,-94,-95,86,86,86,86,86,]),'DIVIDED':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,87,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,87,-83,-98,-105,87,87,87,-92,87,87,-93,-121,-73,87,87,87,-101,-102,87,-104,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-93,87,87,87,-99,-72,87,-85,-86,-99,87,87,-118,87,-120,-87,-89,-90,87,87,-76,87,-88,87,87,-119,87,-94,-95,87,87,87,87,87,]),'MODUL':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,89,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,89,-83,-98,-105,89,89,89,-92,89,89,-93,-121,-73,89,89,89,-101,-102,89,-104,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-93,89,89,89,-99,-72,89,-85,-86,-99,89,89,-118,89,-120,-87,-89,-90,89,89,-76,89,-88,89,89,-119,89,-94,-95,89,89,89,89,89,]),'DEQUAL':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,90,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,90,-83,-98,-105,90,90,90,-92,90,90,-93,-121,-73,90,90,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,90,90,90,90,90,90,90,90,-93,90,90,90,-99,-72,90,-85,-86,-99,90,90,-118,90,-120,-87,-89,-90,90,90,-76,90,-88,90,90,-119,90,-94,-95,90,90,90,90,90,]),'DIFERENT':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,91,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,91,-83,-98,-105,91,91,91,-92,91,91,-93,-121,-73,91,91,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,91,91,91,91,91,91,91,91,-93,91,91,91,-99,-72,91,-85,-86,-99,91,91,-118,91,-120,-87,-89,-90,91,91,-76,91,-88,91,91,-119,91,-94,-95,91,91,91,91,91,]),'MINOR':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,92,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,92,-83,-98,-105,92,92,92,-92,92,92,-93,-121,-73,92,92,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,92,92,92,92,92,92,92,92,-93,92,92,92,-99,-72,92,-85,-86,-99,92,92,-118,92,-120,-87,-89,-90,92,92,-76,92,-88,92,92,-119,92,-94,-95,92,92,92,92,92,]),'MINOREQUAL':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,93,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,93,-83,-98,-105,93,93,93,-92,93,93,-93,-121,-73,93,93,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,93,93,93,93,93,93,93,93,-93,93,93,93,-99,-72,93,-85,-86,-99,93,93,-118,93,-120,-87,-89,-90,93,93,-76,93,-88,93,93,-119,93,-94,-95,93,93,93,93,93,]),'GREATER':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,94,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,94,-83,-98,-105,94,94,94,-92,94,94,-93,-121,-73,94,94,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,94,94,94,94,94,94,94,94,-93,94,94,94,-99,-72,94,-85,-86,-99,94,94,-118,94,-120,-87,-89,-90,94,94,-76,94,-88,94,94,-119,94,-94,-95,94,94,94,94,94,]),'GREATEREQUAL':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,95,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,95,-83,-98,-105,95,95,95,-92,95,95,-93,-121,-73,95,95,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,95,95,95,95,95,95,95,95,-93,95,95,95,-99,-72,95,-85,-86,-99,95,95,-118,95,-120,-87,-89,-90,95,95,-76,95,-88,95,95,-119,95,-94,-95,95,95,95,95,95,]),'AND':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,96,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,96,-83,-98,-105,96,-114,96,-92,96,96,-93,-121,-73,96,96,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,96,96,96,96,96,96,96,-93,96,96,96,-99,-72,96,-85,-86,-99,96,96,-118,96,-120,-87,-89,-90,96,96,-76,96,-88,96,96,-119,96,-94,-95,96,96,96,96,96,]),'OR':([22,26,27,34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,99,104,107,112,114,119,122,123,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,165,172,173,174,175,184,189,203,204,206,211,212,213,214,215,216,217,218,219,220,227,228,238,241,243,245,247,262,263,272,285,288,298,318,],[-83,-98,97,-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,97,-83,-98,-105,97,-114,97,-92,97,97,-93,-121,-73,97,97,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,-113,97,97,97,97,97,97,-93,97,97,97,-99,-72,97,-85,-86,-99,97,97,-118,97,-120,-87,-89,-90,97,97,-76,97,-88,97,97,-119,97,-94,-95,97,97,97,97,97,]),'DOT':([23,26,53,55,76,],[73,82,108,109,116,]),'EQUAL':([26,77,79,80,98,123,166,167,168,169,170,171,175,187,188,194,242,248,255,295,],[78,118,120,121,150,176,207,208,-124,-125,-126,-127,210,221,222,118,266,268,208,-128,]),'BRACKETO':([26,76,167,168,169,170,171,188,242,248,255,256,258,266,268,275,278,280,295,],[81,115,209,-124,-125,-126,-127,223,-128,-128,276,276,276,284,287,115,276,276,-128,]),'PARC':([34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,74,75,76,83,99,107,112,114,128,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,157,161,162,165,168,169,170,171,178,180,181,182,183,184,198,199,202,203,204,205,206,212,213,214,215,216,217,218,219,236,237,238,245,258,261,262,263,295,308,309,],[-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,114,-83,-98,133,-105,-114,-91,-92,-121,184,-73,-97,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,-113,190,191,192,-68,203,204,-93,-124,-125,-126,-127,213,215,216,217,218,-72,234,-67,238,-85,-86,239,-99,244,-118,245,-120,-87,-89,-90,-96,262,263,-88,-119,-69,-66,-94,-95,-128,316,317,]),'BRACKETC':([34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,75,76,99,107,112,114,122,128,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,164,165,184,203,204,206,209,213,215,216,217,218,219,223,238,245,262,263,276,284,287,301,303,],[-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,-83,-98,-105,-114,-91,-92,175,-121,-73,-97,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,-113,206,-93,-72,-85,-86,-99,242,-118,-120,-87,-89,-90,-96,248,-88,-119,-94,-95,295,300,302,312,313,]),'COMMA':([34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,75,76,99,107,112,114,128,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,157,165,168,169,170,171,184,198,199,203,204,205,206,213,215,216,217,218,219,238,245,258,261,262,263,265,267,295,298,301,303,318,],[-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,-83,-98,-105,-114,-91,-92,-121,185,-73,-97,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,-113,-68,-93,-124,-125,-126,-127,-72,235,-67,-85,-86,185,-99,-118,-120,-87,-89,-90,-96,-88,-119,-69,-66,-94,-95,283,283,-128,-63,185,185,-62,]),'DOUBLEDOT':([34,35,41,42,43,44,45,46,47,48,49,50,51,54,55,75,76,77,98,99,107,112,114,128,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,165,184,194,195,197,203,204,206,213,215,216,217,218,231,234,238,245,262,263,264,270,272,299,],[-76,-79,-74,-75,-77,-78,-80,-81,-82,-84,-115,-116,-117,-122,-123,-83,-98,117,149,-105,-114,-91,-92,-121,-73,186,-100,-101,-102,-103,-104,-106,-107,-108,-109,-110,-111,-112,-113,-93,-72,229,230,233,-85,-86,-99,-118,-120,-87,-89,-90,257,260,-88,-119,-94,-95,281,291,292,311,]),'LOG':([73,],[113,]),'RPUSH':([82,],[124,]),'RPOP':([82,116,],[125,125,]),'RINDEXOF':([82,116,],[126,126,]),'RJOIN':([82,116,],[127,127,]),'RLENGTH':([82,116,],[128,128,]),'RTOSTRING':([82,109,116,],[129,160,129,]),'RTOLOWERCASE':([82,116,],[130,130,]),'RTOUPPERCASE':([82,116,],[131,131,]),'LLAVEA':([105,168,169,170,171,190,191,192,207,221,234,259,280,290,295,316,317,],[156,-124,-125,-126,-127,224,225,226,240,246,-71,279,-70,304,-128,320,321,]),'RKEYS':([108,],[158,]),'RVALUES':([108,],[159,]),'RNUMBER':([117,149,229,230,233,257,260,],[168,168,168,168,168,168,168,]),'RFLOAT':([117,149,229,230,233,257,260,],[169,169,169,169,169,169,169,]),'RSTRING':([117,149,229,230,233,257,260,],[170,170,170,170,170,170,170,]),'RBOOLEAN':([117,149,229,230,233,257,260,],[171,171,171,171,171,171,171,]),'RELSE':([269,],[290,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'instrucciones':([0,224,226,279,291,292,304,320,321,],[2,249,253,297,306,307,314,322,323,]),'instruccion':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[3,59,3,3,59,59,3,3,3,59,3,59,59,59,3,3,59,59,]),'print':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declarevar':([0,2,103,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[5,5,154,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'declareConst':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignVar':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'declareArray':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'declareArrayConst':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'assingArray':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'arrayFuncs':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'if_else':([0,2,224,226,249,253,279,290,291,292,297,304,306,307,314,320,321,322,323,],[12,12,12,12,12,12,12,305,12,12,12,12,12,12,12,12,12,12,12,]),'case_inst':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ternario':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'while_':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'for_':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'transfer':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'createInterface':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'declareInterface':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'modifyInterface':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'declareFunction':([0,2,224,226,249,253,279,291,292,297,304,306,307,314,320,321,322,323,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'callFunction':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[22,22,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,22,22,22,75,22,75,75,22,75,75,75,22,22,22,22,22,22,75,22,22,22,22,22,]),'expression':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[27,27,74,99,104,107,112,119,122,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,161,162,164,172,173,174,189,134,211,212,214,219,220,228,241,243,247,27,27,27,272,27,285,288,27,298,134,134,27,27,27,27,27,27,318,27,27,27,27,27,]),'relacional':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,227,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'id_':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,254,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,274,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'primitivo':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'aritmetica':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'logica':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expression_group':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'arraysExpression':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'callInterface':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'boolean':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'funcEmbebida':([0,2,24,29,38,52,58,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,110,111,115,118,120,121,150,163,176,177,179,185,186,193,208,210,222,224,226,249,252,253,266,268,279,281,284,287,291,292,297,304,306,307,311,314,320,321,322,323,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'expression_list':([83,163,284,287,],[132,205,301,303,]),'type':([117,149,229,230,233,257,260,],[167,188,255,256,258,278,280,]),'attributesList':([156,],[196,]),'funcparams':([157,],[198,]),'param':([157,235,],[199,261,]),'cases':([225,],[250,]),'case':([225,250,],[251,271,]),'returntype':([234,],[259,]),'interfaceContent':([240,246,],[265,267,]),'else':([269,],[289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> instrucciones','start',1,'p_start','grammar.py',198),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','grammar.py',205),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','grammar.py',206),
  ('instruccion -> print SEMICOLON','instruccion',2,'p_instruccion','grammar.py',215),
  ('instruccion -> declarevar SEMICOLON','instruccion',2,'p_instruccion','grammar.py',216),
  ('instruccion -> declareConst SEMICOLON','instruccion',2,'p_instruccion','grammar.py',217),
  ('instruccion -> assignVar SEMICOLON','instruccion',2,'p_instruccion','grammar.py',218),
  ('instruccion -> declareArray SEMICOLON','instruccion',2,'p_instruccion','grammar.py',219),
  ('instruccion -> declareArrayConst SEMICOLON','instruccion',2,'p_instruccion','grammar.py',220),
  ('instruccion -> assingArray SEMICOLON','instruccion',2,'p_instruccion','grammar.py',221),
  ('instruccion -> arrayFuncs SEMICOLON','instruccion',2,'p_instruccion','grammar.py',222),
  ('instruccion -> if_else','instruccion',1,'p_instruccion','grammar.py',223),
  ('instruccion -> case_inst','instruccion',1,'p_instruccion','grammar.py',224),
  ('instruccion -> ternario SEMICOLON','instruccion',2,'p_instruccion','grammar.py',225),
  ('instruccion -> while_','instruccion',1,'p_instruccion','grammar.py',226),
  ('instruccion -> for_','instruccion',1,'p_instruccion','grammar.py',227),
  ('instruccion -> transfer SEMICOLON','instruccion',2,'p_instruccion','grammar.py',228),
  ('instruccion -> createInterface','instruccion',1,'p_instruccion','grammar.py',229),
  ('instruccion -> declareInterface SEMICOLON','instruccion',2,'p_instruccion','grammar.py',230),
  ('instruccion -> modifyInterface SEMICOLON','instruccion',2,'p_instruccion','grammar.py',231),
  ('instruccion -> declareFunction','instruccion',1,'p_instruccion','grammar.py',232),
  ('instruccion -> callFunction SEMICOLON','instruccion',2,'p_instruccion','grammar.py',233),
  ('print -> CONSOLE DOT LOG PARA expression_list PARC','print',6,'p_print','grammar.py',238),
  ('declarevar -> RVAR ID DOUBLEDOT type EQUAL expression','declarevar',6,'p_declarevar','grammar.py',243),
  ('declarevar -> RVAR ID EQUAL expression','declarevar',4,'p_declarevar','grammar.py',244),
  ('declarevar -> RVAR ID DOUBLEDOT type','declarevar',4,'p_declarevar','grammar.py',245),
  ('declareConst -> RCONST ID DOUBLEDOT type EQUAL expression','declareConst',6,'p_declareConst','grammar.py',258),
  ('declareConst -> RCONST ID EQUAL expression','declareConst',4,'p_declareConst','grammar.py',259),
  ('declareConst -> RCONST ID DOUBLEDOT type','declareConst',4,'p_declareConst','grammar.py',260),
  ('assignVar -> ID EQUAL expression','assignVar',3,'p_assignVar','grammar.py',275),
  ('assignVar -> ID PLUS EQUAL expression','assignVar',4,'p_assignVar','grammar.py',276),
  ('assignVar -> ID LESS EQUAL expression','assignVar',4,'p_assignVar','grammar.py',277),
  ('declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC','declareArray',10,'p_declareArray','grammar.py',288),
  ('declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression','declareArray',8,'p_declareArray','grammar.py',289),
  ('declareArray -> RVAR ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC','declareArray',9,'p_declareArray','grammar.py',290),
  ('declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC','declareArrayConst',10,'p_declareArrayConst','grammar.py',302),
  ('declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression','declareArrayConst',8,'p_declareArrayConst','grammar.py',303),
  ('declareArrayConst -> RCONST ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC','declareArrayConst',9,'p_declareArrayConst','grammar.py',304),
  ('assingArray -> ID BRACKETO expression BRACKETC EQUAL expression','assingArray',6,'p_assingArray','grammar.py',316),
  ('arrayFuncs -> ID DOT RPUSH PARA expression PARC','arrayFuncs',6,'p_arrayFuncs','grammar.py',322),
  ('if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else','if_else',8,'p_if_else','grammar.py',371),
  ('else -> RELSE LLAVEA instrucciones LLAVEC','else',4,'p_else','grammar.py',377),
  ('else -> RELSE if_else','else',2,'p_else','grammar.py',378),
  ('else -> <empty>','else',0,'p_else','grammar.py',379),
  ('case_inst -> RSWITCH PARA expression PARC LLAVEA cases RDEFAULT DOUBLEDOT instrucciones LLAVEC','case_inst',10,'p_case_inst','grammar.py',389),
  ('cases -> cases case','cases',2,'p_cases','grammar.py',396),
  ('cases -> case','cases',1,'p_cases','grammar.py',397),
  ('case -> RCASE expression DOUBLEDOT instrucciones','case',4,'p_case','grammar.py',406),
  ('ternario -> expression QUESTIONM expression DOUBLEDOT expression','ternario',5,'p_ternario','grammar.py',420),
  ('while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC','while_',7,'p_while','grammar.py',426),
  ('for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC','for_',13,'p_for','grammar.py',432),
  ('for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC','for_',13,'p_for','grammar.py',433),
  ('transfer -> RBREAK','transfer',1,'p_transfer','grammar.py',440),
  ('transfer -> RCONTINUE','transfer',1,'p_transfer','grammar.py',441),
  ('transfer -> RRETURN','transfer',1,'p_transfer','grammar.py',442),
  ('transfer -> RRETURN expression','transfer',2,'p_transfer','grammar.py',443),
  ('createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC','createInterface',5,'p_createInterface','grammar.py',462),
  ('attributesList -> attributesList ID DOUBLEDOT type SEMICOLON','attributesList',5,'p_attributesList','grammar.py',469),
  ('attributesList -> ID DOUBLEDOT type SEMICOLON','attributesList',4,'p_attributesList','grammar.py',470),
  ('declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC','declareInterface',8,'p_declareInterface','grammar.py',483),
  ('declareInterface -> RCONST ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC','declareInterface',8,'p_declareInterface','grammar.py',484),
  ('interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression','interfaceContent',5,'p_interface_content','grammar.py',490),
  ('interfaceContent -> ID DOUBLEDOT expression','interfaceContent',3,'p_interface_content','grammar.py',491),
  ('modifyInterface -> ID DOT ID EQUAL expression','modifyInterface',5,'p_modifyInterface','grammar.py',503),
  ('declareFunction -> RFUNCTION ID PARA funcparams PARC returntype LLAVEA instrucciones LLAVEC','declareFunction',9,'p_declareFunction','grammar.py',509),
  ('funcparams -> funcparams COMMA param','funcparams',3,'p_funcparams','grammar.py',515),
  ('funcparams -> param','funcparams',1,'p_funcparams','grammar.py',516),
  ('funcparams -> <empty>','funcparams',0,'p_funcparams','grammar.py',517),
  ('param -> ID DOUBLEDOT type','param',3,'p_param','grammar.py',528),
  ('returntype -> DOUBLEDOT type','returntype',2,'p_returntype','grammar.py',539),
  ('returntype -> <empty>','returntype',0,'p_returntype','grammar.py',540),
  ('callFunction -> ID PARA expression_list PARC','callFunction',4,'p_callFunction','grammar.py',548),
  ('callFunction -> ID PARA PARC','callFunction',3,'p_callFunction','grammar.py',549),
  ('expression -> primitivo','expression',1,'p_expression','grammar.py',559),
  ('expression -> aritmetica','expression',1,'p_expression','grammar.py',560),
  ('expression -> relacional','expression',1,'p_expression','grammar.py',561),
  ('expression -> logica','expression',1,'p_expression','grammar.py',562),
  ('expression -> expression_group','expression',1,'p_expression','grammar.py',563),
  ('expression -> id_','expression',1,'p_expression','grammar.py',564),
  ('expression -> arraysExpression','expression',1,'p_expression','grammar.py',565),
  ('expression -> callInterface','expression',1,'p_expression','grammar.py',566),
  ('expression -> boolean','expression',1,'p_expression','grammar.py',567),
  ('expression -> callFunction','expression',1,'p_expression','grammar.py',568),
  ('expression -> funcEmbebida','expression',1,'p_expression','grammar.py',569),
  ('funcEmbebida -> RPARSEINT PARA expression PARC','funcEmbebida',4,'p_funcEmbebida','grammar.py',574),
  ('funcEmbebida -> RPARSEFLOAT PARA expression PARC','funcEmbebida',4,'p_funcEmbebida','grammar.py',575),
  ('funcEmbebida -> ID DOT RTOSTRING PARA PARC','funcEmbebida',5,'p_funcEmbebida','grammar.py',576),
  ('funcEmbebida -> FALSE DOT RTOSTRING PARA PARC','funcEmbebida',5,'p_funcEmbebida','grammar.py',577),
  ('funcEmbebida -> ID DOT RTOLOWERCASE PARA PARC','funcEmbebida',5,'p_funcEmbebida','grammar.py',578),
  ('funcEmbebida -> ID DOT RTOUPPERCASE PARA PARC','funcEmbebida',5,'p_funcEmbebida','grammar.py',579),
  ('funcEmbebida -> RTYPEOF expression','funcEmbebida',2,'p_funcEmbebida','grammar.py',580),
  ('expression_group -> PARA expression PARC','expression_group',3,'p_expression_group','grammar.py',595),
  ('callInterface -> ID DOT ID','callInterface',3,'p_interfaceContent','grammar.py',599),
  ('callInterface -> ROBJECT DOT RKEYS PARA ID PARC','callInterface',6,'p_interfaceContent','grammar.py',600),
  ('callInterface -> ROBJECT DOT RVALUES PARA ID PARC','callInterface',6,'p_interfaceContent','grammar.py',601),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',612),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',613),
  ('id_ -> ID','id_',1,'p_id_','grammar.py',622),
  ('id_ -> ID BRACKETO expression BRACKETC','id_',4,'p_id_','grammar.py',623),
  ('aritmetica -> expression PLUS expression','aritmetica',3,'p_aritmetica','grammar.py',633),
  ('aritmetica -> expression BY expression','aritmetica',3,'p_aritmetica','grammar.py',634),
  ('aritmetica -> expression DIVIDED expression','aritmetica',3,'p_aritmetica','grammar.py',635),
  ('aritmetica -> expression LESS expression','aritmetica',3,'p_aritmetica','grammar.py',636),
  ('aritmetica -> expression MODUL expression','aritmetica',3,'p_aritmetica','grammar.py',637),
  ('aritmetica -> LESS expression','aritmetica',2,'p_aritmetica','grammar.py',638),
  ('relacional -> expression DEQUAL expression','relacional',3,'p_relacional','grammar.py',662),
  ('relacional -> expression DIFERENT expression','relacional',3,'p_relacional','grammar.py',663),
  ('relacional -> expression MINOR expression','relacional',3,'p_relacional','grammar.py',664),
  ('relacional -> expression MINOREQUAL expression','relacional',3,'p_relacional','grammar.py',665),
  ('relacional -> expression GREATER expression','relacional',3,'p_relacional','grammar.py',666),
  ('relacional -> expression GREATEREQUAL expression','relacional',3,'p_relacional','grammar.py',667),
  ('logica -> expression AND expression','logica',3,'p_logica','grammar.py',691),
  ('logica -> expression OR expression','logica',3,'p_logica','grammar.py',692),
  ('logica -> NOT expression','logica',2,'p_logica','grammar.py',693),
  ('primitivo -> NUMBER','primitivo',1,'p_primitivo','grammar.py',706),
  ('primitivo -> FLOAT','primitivo',1,'p_primitivo','grammar.py',707),
  ('primitivo -> STRING','primitivo',1,'p_primitivo','grammar.py',708),
  ('arraysExpression -> ID DOT RPOP PARA PARC','arraysExpression',5,'p_arraysExpression','grammar.py',722),
  ('arraysExpression -> ID DOT RINDEXOF PARA expression PARC','arraysExpression',6,'p_arraysExpression','grammar.py',723),
  ('arraysExpression -> ID DOT RJOIN PARA PARC','arraysExpression',5,'p_arraysExpression','grammar.py',724),
  ('arraysExpression -> ID DOT RLENGTH','arraysExpression',3,'p_arraysExpression','grammar.py',725),
  ('boolean -> TRUE','boolean',1,'p_boolean','grammar.py',736),
  ('boolean -> FALSE','boolean',1,'p_boolean','grammar.py',737),
  ('type -> RNUMBER','type',1,'p_type','grammar.py',747),
  ('type -> RFLOAT','type',1,'p_type','grammar.py',748),
  ('type -> RSTRING','type',1,'p_type','grammar.py',749),
  ('type -> RBOOLEAN','type',1,'p_type','grammar.py',750),
  ('type -> type BRACKETO BRACKETC','type',3,'p_type','grammar.py',751),
]
